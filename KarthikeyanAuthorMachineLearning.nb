(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    160011,       3296]
NotebookOptionsPosition[    156071,       3226]
NotebookOutlinePosition[    156574,       3246]
CellTagsIndexPosition[    156531,       3243]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Using machine learning to study literature", "Title",
 CellChangeTimes->{{3.8813976663872128`*^9, 3.88139767569541*^9}, {
  3.881397987446761*^9, 
  3.881397989918441*^9}},ExpressionUUID->"0e0d3dd4-a7e0-44f7-bca1-\
ba866db27c0f"],

Cell[TextData[{
 "In this activity, we will use Machine Learning (ML) to study literature \
from different famous authors.\n\nIn machine learning, the procedure is to \
train the computer to recognize objects using one of a variety of algorithms. \
 The ",
 StyleBox["training set ",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["contains some number of objects with their association, for \
example, this artwork is associated with this painter.  \n\nOnce the machine \
has been trained, then the training is applied to a ",
  FontColor->GrayLevel[0]],
 StyleBox["test set ",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["of related objects.  In our case, we will ask the trained computer \
to determine which of the three authors -- Shakespeare, Victor Hugo, or Oscar \
Wilde -- the literature most resembles.  Our test set will include a number \
of famous writings. \n \nThere are four categories of approaches, or \
algorithms, that are common to machine learning:  regression, classification, \
clustering, and generation.  The graphic below captures these in a concise \
manner.  As can be seen, each of the categories has some number of specific \
types.  The most common types are:  logistic regression, random forest, naive \
Bayes, and neural networks.   We will use those four types in this activity. ",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.7652804330221*^9, 3.7652807877306013`*^9}, {
  3.765280911668887*^9, 3.765281063987365*^9}, {3.765284821829933*^9, 
  3.7652848265826178`*^9}, {3.8813980250950108`*^9, 
  3.8813981129070683`*^9}},ExpressionUUID->"36d52b2b-5342-40d9-82dd-\
918717457859"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQt4FOeZ55uzc3bPbJ7dM7P7nJ3d2Z3due2zeWZ2ZnYn8ZxjB5CB2Nzs
sRMwN0PiTCbC9jg4mYQYcREYLIEtwMGCOMbEMQTHQJCNDBKWJRshYbDEtSWB
LkitltQtqaWW1OrWpVt9e893qaqubrVEC12qJP79PD9QV1d931df/avq/df7
fd1/+r0fLl33L770pS/95HfZP0v/YeO8H//4HzYt+332ZvmLP3n+2RdTv7/4
xQ2pz6b++MHv/Q5b+N7/8aUvnWR//J/s76u3vkkAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPJ9awUsj38VbLP
AeCrQgtcE/E6uXJ6Id3YOotuvvR1AIQWuCagEzAa0AlIhpF0AgAA4P4F/hTE
wzURrxPEkyAergnoBNwN6AQkQyKdAAAAuH8x2g8BcxKvE6PjF2BOoBOQDNAJ
SAaj4yEAAADmwWgvBMxJvE6Mjl2AOYFOQDJAJyAZjI6HAAAAmAejvRAwJ/E6
MTp2AeYEOgHJAJ2AZDA6HgIAAGAejPZCwJzE68To2AWYE+gEJAN0ApLB6HgI
AACAeTDaCwFzEq8To2MXYE6gE5AM0AlIBqPjIQAAAOYhGb/SmvoG9RxcN+U+
qSPrJPWVXhB4z50k5zPzxfL21y1EIQs54rf5ZhaFuy8MXz5GHGu20MDNGvLm
HyJHgu891rerr7SMrZdNjpR5FPAQdWfMH1tdjzyg/e2tJBqqyLr78fh+FvX+
eoNu2YPUe/oktT4yynZzH5w0j1r97iFyl+3SLVtEnTfzqCFj9qTEMe31Hgpa
D467DZati8gykW3buIx8QSJ3/ooR17F9kkfe+nKB51Y+Nb+z3PC4cCJjSqPb
czeaS4uo49Sa6LJtadRz422qHEkjrx4i/mrOmnNP9emPN6ez6OWJ1dw0IXmd
LKK2q2Xkd1mpr76I7MfWTEn74ql8JWXYsqbPish9cVOsPnZtJ0/NCbr1UvLf
U3wr4+F7bpfZrh+drREK2Q9Pmk4AAADcvyTjV5w/r6FgXfaUe1RvhY8C9RfI
nXOS+q/ZRKzo2sA84NwF5Hxu6bD1WxbuZCYvgXcdC8xrhpnP6P3lFupj9Q+e
3zJiu3pZuzy5udR7bKfwqHy7noyFSdfV8q03Ytrr+OYqalv50F23a99XJvqi
Z69SV8oCikR81L545G36an3k3pt82+J1MlpccafwpmiPu3CtXLZxNQUifmq5
x7j+rnFRi59CtoPjboPL6Sevuv5EwDyqP8zacG7kMjsdrO2d5dR9PZ88zQ6p
6ZyRPa3ZGYtOzADXDkU81LJf6sLy+hGicA3d3jiSx1hEjcfTRvSwd62PHe9A
86fUUXKcXDfLicmD/JU7DO8Hs+pEHJ8hK7lKjpLb6qCg88Op9/Ts2jEUGn7t
qD5VIrTTkB597tVa46GI+8OkyxZ6C1aPore768lM14+q/S9Q45tLJk0nAAAA
7l+S8Ss8bxmf32vfkUvaK+CkjmceEl7J1+jWFvflrI9db8hGbY/EbhvusVDb
CN7Ka3EzzxfNS3puyDxjW3oxUb/Ml3bsKdDKCnawugfKxHLH97Mo7JfLIz62
POKW9cxbqmujj7oz473ugzTU7aOurevI30nkObo6Ybu6Nv9dQm/LPWoyfeP9
4BVWT3Q17r3dpW7yXd7JyvsadZ+uiXZb1ckY3932SrHWfudKWXeI7WP7CPsX
XZ8o1FqQlIeP18locUVdXplSup9a35wjvVrAo8R4KeSstmv1+6oPiJizs8VD
vZqfXEaDgx6Rq3LWe5SD5iH7r/ZSMBjtI3fxei2Ojfeoo7YhPZX6ujza593n
ntWtz6uqpGCI1af4ljYWd4adJ8TfNzZtp1DIRY271pGn3aNt039N5mz17W3e
s1x61PzHRZw70Mc02XQ0JsZ2OTwxedYOu5KHSNBG/nnT+RKKKEvDPibo/nKR
s4mpN2tewj5ur7Bqy8KufKrau4eGfKTV0Xn8MarM1i1jZXWcWiH6bmCAb0Ti
Gcpo8fRYdGIGnFal34I1VMv2i+dJI4pnaKuM9mGkt5zqmRex7N5DEdYvjrw8
1h9WqlH6gusn4i2lpsLo8Qm5SrXPY4736W8MO94V7FjEa9thsWu6U9s6VL2b
Gj8ZXkf92SJxeORCB1kzJ2fMwmR5j4TrsXOGX7KHPTfSXR/4e8u+QxTu57p8
Sug0EvRr/egt26Hpd9hytm0yenfVd0bPpcrdurYsEuMkBr54Ub7flEYhto7z
nQUJz79hdeW8KOtRXtxbJmoP15x6bINNsTlKs10/+JiWgPWAuM7r1w848kU9
2nU2rJYz/BwZTScAAADuX+7Vo9qXrifncwvE372X3OJzkRdUveDcedS6+AHq
ryUtF9m6cgG1PLpB3KukN/ya8GWR7sS+iXtB917Voz4oPONg4QaZRwyVkT1B
WeTnHvUhCvHbcZ6st20L94wyz8jXCbVKz+dYd0Qsb4sbI8vbLOID6yGZ31z8
QMznfH8jQR+Fetn/Pp+sR59HTbJv1Dxqq+bBfeS/spMcLxWIddtXsnrnr6K+
klxqnRt7PHxfZFF3PtvfsI1aUx7SPOpI+9fH+/LAssnJoxbdpkDjYWqtYnFP
2MFi/8XkU/xhdU6ZWNbAY+htacTD8u7TK0Sspfeoqp8UHiJoJdv+JWRJX02O
3E0iXqrnsY6S70qYRx2lDW31PNeRL3JhVUdyRHxly5xDXawN3uLnxPa8TJHf
SksVbeSxmzV9DtUVN1C480ORL+HxXW36LKo6dEiEXF2nHo9prxjryz7oLTkg
YtGg48SwHJDc7xVazOtlPpb7kIRtfH2vrCf3WREDtjIPQwHpGfX1Juzj3J/Q
kNLXfNv6N5+i+gsNrFgZo1btT6Vb6YtpgMWcfiUmbSwsk/uduVzE4iEWZ9Zl
zB2/9zARvP97Pt5B/dzDdDI/+PIezaPWn8gk6/65wisN+qRXsryazWJ8v3j+
II6t0GwKDfKxFsXviOPTeXyFOJbubnZIGmN1KY5TyEPBfg+FBqVn4h4jkbar
X5XehGv2xuYM5o1Zvdm7EtbR7WRSqNsn6qh5c7Xpxw8nq5Omi4qnCXqov+YD
asiaLb2r9szr67rnCk8JnYY78sXxq37/feHH2t55eoTlTyand55HZfU59g8f
g8GvM+p1yHqJnY/+UqpLeP59P6YuPk64u3C9yKPytkuftihhexoPZotjPnBt
37D8vamuH1uj1+LbSo65af884Zf5+cPbJT2qn9qPPcbKfoGGwgmeQYyiEwAA
APcv9+pRW188JPKU3Kfx/0X+7+FoDi8y6KSevavJuaeA3ZOVJ6+3Cqh1Rbbi
I5Xxrn//xojjc7m/E2Up24c7Log5l20Zikf9ZlbisvjY1wDzbJr3fFDzcJ7r
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
+sjf7VmTW0bkL6dbL80iy9ZFZFGWW149JK6ZzTp9TPSx0Nd3V7axfakt17TW
fXGvaLNhx27jMhpi/eMtXGuIToz2Qo5/3El9pRckJQXk2rJq/OWmzKNgr5va
F09cOzuyTkbbWVpG3vxsckx0f8x90PDjMVUeNeZ6X1tKHec2JX8OJ3ltGO81
vLm0iPqbWPvqyqmX4W24Sd6qo9F74DjpaffQwNXN8n16KnXdLie/y0p9NR/Q
nYzoNekWu4fyevXXqYT3S3aP9jTdlMtul4r/+9n77tt3KNz54T3171ivJwBM
R55f/xf0R//1y5T6/Ffog7xHxDKjfU8yqB61orZYW/Z8lZNFFAF6uTCXlhdd
p/J+vzSuYT+duPmZtt2Jjj7F2waopd9Hfl8HrWGfZTu91OxykTcSoau1JSOW
8aOqZrIPRbQyTlwrSLjsexVt1NxxW2yzvOgKXezza59/Xlcmlj/L2tzb30PV
gyHxkd/fS6+WnDG8f+93j/qzNx+i//AH/5oenPUHlH0ouev9VMSxibC8foTp
00q3N7L75MbVNOgjCjk+pEoWY/v4Y5whC9VslPfQ+gsNFHYeFX/fKbwpNOdW
Y3C2bSDip5Y4z9Lp8FOok3mG6/nkaXaIbVw5Kwzb36r9L1Djm0sMq3+8scI9
lcOOpZ8dy1DT0ZjlbTWdd/WZ4jiHLCKOcjn9Os+1iBqPp40rrrvbsYit7y46
3neIIuSn3hv51G0ppWCQXSq9pYb61Pr30qguY2rqj9eJ0V6o/XULu3bYyP2b
k+QpKBM66z+74d7LFL+l8yCFfBPrUb0VPgrUX6DeHNbO3Fzq/fWWCfeofbU+
cu9daPgxmQqPqr/eu2/fJH4Libg/HfN5ONq1YbzX8MYzx8l9M5+8Tg9FBqzU
faOIui/umhCvZ9m9hyIRDzVmzqGKA4fk/nss5Co5Tn3dJO61tcr9tNctQ7qu
U48n7D/tfvnRK9RlYW28WS7K67/1qWi/7RcZrC7/uJ4TJns9AWAsnCteRO9/
ON9wjv12Lv3l//x9+tKXvkR/9t//Lf3js18x3PeMxaNeqfpEW7b2Wht3ebTt
42K6GgjToLuFnissojccXuFdt53LpV91B9gFZ4B+efMybahooC7mRynUJT1q
h09cTy413aLvnDs/QhmfUmU4TO7OWlpdeJ5+aXfQ7tLzw5Zxn/l8TTf5PPX0
rbOyrIi/izLKLtPP7b2invxrecKj8ted1hr65/JKagxFKOyuN7x/k+WV1x4w
RLeHj82h33wwj36TM4/eOzWXjnGYln99ci4dPfGwgPvnd99n/CaFfsV45z3J
L9m2fPvDv55Dbx+dI8YRHDoym956l/Gr2fSLX82iN9+ZRQ/P/0/ivPi93/uX
9MD/+//QK69+bdRzeiri2IT3VB7b+y3Mky6ivj6KPpdlvmZQSpp51hNi3TtF
t7Xn13V5ZcroAz+1vjlH+qCAZ5hHdTk85M6PetIOu/IMPD2V+ro8Whnd554V
nzedL9GGNoR9fnZDljk8Z72yLrv/N2fNI2e1XRv/4Ks+INrcXmHVloVd+VS1
dw8N+Uiro/P4Y9TOyglYD7C6UmLWDzjyRT3afoXVcko1j24EE6IT/rwhKPen
49j86HFX+rOJHbPOFg/1as8b2LEf9IjYpy5PetRG7XizTXqZ93tVxmKOvDwR
d6l9xPuPe0NnpV23fjnVp8/WaYZEXeqxqGDHKRjUPiJ38fqYdUV92xLrZZiO
1WUv7xFrcj02fhLVVEg9ntteoL6e6DNE/nkP0ymPMZVDT8GmEXS6cTV5tWVE
A9d3UP3ZIm07dsKQNXM59Q+Q1H5aKnnao+v3X5PjDzRNKy9VxxOhE6O9EPeo
/is7tfetGWVCR44ntvDujh7rAzK/6i51x/TFQJHc1rF2p7Z+iAf1EcWjPryU
Bmqi23hPbkhYjvf0SQp0K4e5p5ba4vyt1+Km7s1/F9f+r1HPmRqtjKGqk8K3
tr1SHG0385wdewq098HGAmrl+70jN1o58+iun13Q3oZaCyY+R2syjyqv91HP
xbXPxxP0Fa8d8Zofc+4MWakxa3bMtWGyruE17NoWtB3UrnkDA8o2Qxa6vfHh
hPeYqreyo9eqgIOa35wXUya/R0bcH4q2edn9NFB3MObz6tceFv9XHHyf1eWg
zuus/X2l2nk/4v1SvF8k7rHNmdF7bG8PRa/bk3jfAWAsvPDDv6SVa/9MjCc0
mj/9838rYnHOf/xP/9pw35OsR+W+z93TRkca7lCOvUPkPyO+VlpRXEP8lljV
2kQf2G3iM/4qsXwuvGSFLvf6T3Xd4p7JPeqBrgDzh7Vi+fJRyhB+MzBAF+z1
tP3zj7W26JfxMlSPysvirzeKPtLqPT8Ypp62CuZRXaJ+dc4q34Y1QrTH6D5O
hlVr/9wQzfL8/z+/9Ff0zxv/in688a/pJ2l/TRs2/TX9dDPnb+ilLX9DG7dK
0tL/F23a9r9p0/b/TZsZW15m7Phb2rrzbymd88rf0raMr9J2TuZX6WXOrq/R
/zfrD8Q58bu/+zvi+c0//fAvRj2njfJAPLYPs3ttP4/jmOeo36iMB2VxOL8f
2t/dK27bA188R7dzb2r3S34vDjQeptYqj7jX1m5cTL4RPGpvoXrPXSTu20PV
u6mNxRkRd77wFFVHckT8YXtd1tWV+6y4x7daWIwQsIgcr9PK6glaybZ/CVXn
lIk6xdjVbWnEQ4bu3J+IWKj79Aqxbf2bT4m8rzpOtWp/Kt3aOot5MT+FWFxy
+1SJ9Gf754nYiftx3i4Z3/ip/dhjwscMhaduvGYyscI9lcOOpW+gk3prHKw/
y0U8xMP9oaZy4TO5F5XHKepR1ecNqkflfdjF1vEWPyd182q2yFs271ku8u1y
2xQaDMq/609kknX/XC03z/tQjR07c2Rsqh4LS/pqcuTKMYH1fJ1wjTjm+voS
6kUXq6keVc3XVB8vFMe3cd8uoanO4yuE/tzd3E8cFHEu99LVTBOVezOJj0Rx
n1sr9kvo/do+UVeiepsOHxVl83HwlvRldOe1udTt5PHoPhn7vrmaLErumpfZ
WuMRz1pq05kOD8ncCs+dCE0P1Yjx8VVvvy/65l5zIvE6MZtH7f6IdVD/BXLM
W0CdW1PFMuH5uG9lf/deYoIcsFDrI2z978hx5O1LHiImQ82vOvdyj+gTHrWn
yE3h7gvUOpet/+0ssb5rw0PUe5mJbaBMlNP205Niee/h9WKcsL+TaLAwNpfr
ue4WeVTPxwXkPX+BevYyLb5UIL3wkw+Qfd5S0Qa+nepRXT9dSi2PbpB/vzif
eH53wMZadnkn9deydc9vkb585QLxfx/zwe4Dyww/JlPlUeOvl85Gv7hvJDyH
lfNT+tVF5LpdRo5fztOuDZN5Ddc/c1Wf44WYz63LmDvCPeb7NMDldW2H2Kal
zC6up/ocMS9TPNvi909Wr4t56kT91OXwk79ys1iPX3uc78wf9X6pvyfr77H8
2aI2rngS7zsAjAUeO/Mcj9Ht4Hmnf/fv/xX98Z/+G/rBP/8l5X220HDfk6xH
vcIvIOEAeYYCysO2Xnr+TK7mL/m43S86O+lyh5MK2xz0s3LpUeuspVo5Gxq9
mic81O0jm+2LGI86rIyyj2l54SU60dZFdr8cn1tnK0u4LNajhmlPUa5Wb25f
iAZd1co6Vm256lmni0edqWN9T515hP7wP3+ZvvIXvyd8bdHFJXfdxigPpMbk
EU8NDQ1Ec6bq/ZA/s63i8T579bd0UsAW9agh+0FSnxfz7YMBz7AYW8Thumfa
EW+5iMn5vZWCHgr2SyjkouZ3WewfrNbu+Te2MB/E3nO/IuISq/QAYvxpJLot
Oy2FN9Wee4f9NFB1mCqzsymgPIMP91ljY5/i29Fn6C/Jccwh+1HpyVjcoebj
OlqGx1xTyYToRDmWtswlIsYaancI718tcqFyrBgfYzbwxYty/bRUCoaGe1S9
j9U8KlungceRfZ9S9eEcLadqv1xGEXZc+PEROUrm1cRx0/Wt5lF3bacBr6IH
nstQYlJ9fYn00qTTmqpj8Y+iNXfxZvkMhv0dZOWHBplWWLDpZ16yW4wjXqlt
rx5ndb9U/5uoXtueddF8UMBF3YXrqeGTEqFDsai1lOq2PaV5VF6XPjfC3/O8
kl7TIkZO8IznXnVitBdS/VxEzTlFnNTx3ENkX7SehjrcFPG5Kcifi3Hfyr3i
DR/5L0tvx/2kGNO7ZCFFAuz/R76qLRfvmUftr/VRT8Z8rT7+vvfAwphyWh7b
KTxtm7K985c2GqrIGuZR/bf4WN9c6s0toK7MVeQ8GOuvnT9n18bKbGrfx+dm
y/bavyl9cZDtC8/v8lzvAPOmzj0F2j77bxUID81ztffLWN9EHpU/v+E6H/Ga
H7AMmzOgXhsqJvEaHu9R/WH1GWfie0xX7ovCx4b7XeJaEhzwi/uZ3qM6LHbF
oy4TMaD+vNeuVcpYjaGWcuqxlAqPyts92v1Sfx3XXyM6WvyT8v0KRsdQYHpj
Fo/6s58/SMtW/onwpuoyo31Psh5VP9Z3Van0lHwe6bfOXqLGcITcLqvIT665
XENftFWL9bKdynje5no67uiSFxFlrC/3qLV3pH8dqQw+bvdEawtt/OyMaMNn
A2FmcZuGL+up1Y31lWXxccPP5H9EL9W0iWr5WF91HXhUc1F69e9p+ao/pcKL
i5PeZir8TiJ4DC/zoOw+u327uF/6buwedj9sKmuQMZn14PD7e9oLFJBGN8Y3
qDFL/8XNJPKilZ1iXBOPHfizdW2e0rYXqP3cJlE/L2aQ+cv6t9LIy2PYgPRH
alzCyxTf48PazMeE8WfNjqJs5mMXU9PxH4iyq/nzdfZqO76JrPuXiHX4uEu+
vVqOKCPikmWweIJ/7q/cETP/cqSYayqZEJ3ojmXl2zmib7pOzaebL0d9pqMq
muOoyy0ReQi+XN8f3FupPlbvUbXjz17imT6rj4fpXcfna33PvWZ838bmSuR4
N5EbUXLn+voS6iVOx5GglRoy51Jl9h6h466c6NjdzlMyVmzMzSYrO+ZCi0xD
re89S82fFIm295xbG7tfI9RryUylpmNPy5hUjCOooaYTL4ucrGV3hqjPfW6D
5lF5GeSRZfCxi/xznl/RazpR/DkenRjthXgeNVB3SI6R3Srzktwrcr9H/QVi
HZGv9JdFParqC1MWKB51vnim4M2Ruc/2nQWk5lF5vjTckSv94hNbxHMQ14sP
xZSjelR1/ipvU7xH5f6xJ+Prsf46vVh4ajEumPniIXYdGji7XnrUkGyvfckW
oRnXBumTO9J3ivWdP1pPDj53drHMs/ZkLBT+2XN0teHHZMo8qjL2oSJ9GbVd
qxb9YN8/J/G5pJyfrpw14h7RfqNIjJ/VcqW/SJu0a3gij8rP15HvMU8Jjzp4
Q+Y1b7+VSY73lw8rU3hU9nfzNbtoX9uxNXL9d49Qf+MH5KzxCO/ZUXKcusqP
U+fVcnG95X000v1ypGuEyKOqzxYn8b4DwFgwi0dNhNG+J1mPejXIx+2WaMvS
GnvFXNNN+bnCUzrC0S/8bdZ9v25Wo5M6/UPkGeihwo5BkUf9juJRK+5Ey0tU
xrJzl6h8UJt5Ier7eXnZ8GWXzgr/2dsr/efa8rqYsqqaLWK5fh3Noyqe2eg+
vp896r1glAeKHyOpfs9DN4sf4u+HXex+qD63Fvdi3fNbvp06bjQ+ZunVfc8O
jyN813eIXJ02H5Bb0cajwqNU7M2g/q5O5jdYXGF1xIz1Dao5J+4ddHOF+P2+
dnsa+XVzGgNNH1KrEh+JHQp5xNgvfTn6Mvg8RT4WU8Qmgdj4ZjLm+9xrrHBP
5cTFNnwsqjj2zI+R+v0erN8Dav+xvqeIOh812h+28+o8LwdZX8+O+b4O+3W7
HBuXLp/5tynzUcNKmTyfEN+36rEQ81FF/lPRg5JH1dfXsH1dQr3E6/i2Mu9M
PKdg8SFvT4NuPirfL4cyh6z1ahmFBv0U7LSIOW/8OMvvPNF9D0kCnd46kkO6
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
t9ALJUUir/p8jUuUt/bseboaCFPE30WvXPqc3nTIfOv3P75OFm8nvXbpU3r2
Wh15IxGqqC2hFeevUyPzmbaWSvr+hSLRzkPdPqq9U8o+uyXWc7ts9KNLV+hc
b1B44k35uZTN28+uzB/XXKOtzE/zM6TiTonhx+N+8aj8mvHf/vjL9A/r/ged
zE3Oq056HMu8WMjnpna9f+R5RR6zM5/iWLuTP5qRzzsGbdS+ksXbc75G3adr
tOvoUNVJcqTMo6FumYNq35EbvcgO2ajt0fnaZ9wfqLkl/vKe3CDyTfzzSFAZ
10A+6s5cmtjTWNzMQyh5riVbtHKEN5y3lHyN7mFldOwp0NYLNhYIPxnd/3nC
l6j5T16+zIGN3i/i/XcOifO3Tc0hPsNibH/ZlOTJJksn3K/L42YR/STypEPS
o/actWn9GGq7wLyXcgxYH3TsPKl5deHTXimmcEfB6H2v9Hf35mju2XODVVfB
juUTWzTd8Zf7wCpy/DD5OoZpUHccu/KcRP2x+UzH4nmaFrhHjdk+4KQOnmdl
bQp61IU+cr34EPWcqdHVrTsPMleL/9WX68W/o9b0YvJd3inOH3dhtC8HinaK
NrhLlb5n/Xmveelp7VH3HaJIwBLrUTcuo37mEdz5K6gur0z2jzKBK+wqlV4h
PZX6utQD46fuc8+y7VaTV1vGltYdFR7DWa8sY96zOSvqLztbIxSyx3vLReRj
ehj44kX5flMahfj5/858rS1hVz5Z1DJapGCH6g4Mq3/g+vCcq5mYTjoZPynk
7WOndd3BmOWVr6SI/+uLb1PAtk9bXp13U3t24rTKYzpwdbOiz9XkD8pj3MM0
avy+Ta1O7nfG9fuoJVJLEUU/4XjLOgO/13f9j/8nHXj761R0cYmhnD73KP3J
n/0b+r9+93foK3/xe8KrGu17hnlU5iev3Dp/V4/Kx9Vm1TdScWsrlXQzEYWk
RxWeMjBAF+z1tP3zj0WZ8cviyzrQFaCwu1ar59kq6VG/XSzjnDeKPhrWlu9c
ukkfONrpE0YX855XmUcVdQXDzK8Wa+upHpXXx8tU57h+M++62C7/2if0Vlz9
b3WHYt6bhZ8fnkWffr5EcmkJfaZyeQmdv/wYnf/icUExp0xygVMepeTK32uU
Xo1y8VqUz68/oXHpxhOiDP2yi9ee0NbVl6Evu6T876P1lkXbU6y0UXD5cdFu
3v5/fPYr9KUvfYn++//4v+l7675Ch47ONodHjYmJHxSxunvvUyLf5D0p81qd
x1hc7WfeZGOBjKO5X52/ivpKcql1XjS+768lLS/ZunJBTOzPc43hbsXffFuO
E3X99EnxfXb+q4eEb+g8bBkxd6d5SO6fHtsptvee3CLW5TF+qPWk+Nux7ojw
EW1PbFA8wnyxXwNsF6RPiHpU/f4P86gJ+0WO41S/g4/Xb1f9XNg2zIdNJ48q
POOu9cJfBa2HqGXBFs2jtv9oA7U9+YDoG64L3g/yGPiofcn8aN8wD8b7xn1w
3+h9r3rigJuCXezY9cpnFOJZxtwF1Lk1VfOiQg9Kn6t1iDaMUMcwDer3scKX
OFer06l96XptbDdvI/fNzp/XaN7W8c2l5Ji3QAyL6do8X7SnbWWszxV5VMXr
83LaX7eIclrTioVOhG/+RqpWhuiLoRpqf/KhSdOJ0THuaIzkUf3Mk7rPrVV8
oZ/ajz1GN7e9QENhOQa4rZ7nNvOFB606kiPWsWXOo+bcTDFG07IvW9jaFuZJ
hccIWsm2P3ZcZtUh9btL/ORrKSf7MTmeU+TUFH9ivWRnH5eKengeNdBaSuyW
Tz2n51PFQVZvxEV9Tj8FbQdlTpjFmDZWpyV9Gd15ba7h/TsW72F0eyYV7ivZ
cXMdfyyqvfTV5DiXKY6t+vwh2O8RiL8bpZ/tbPFQ/+1y6R/S51DTNTv700KB
oNSo4fs2xTq535mQ+agK2m/OCMMa+3s0M8WjznvkD+nBWX9Aa575c8PheVQe
i3P+wx/8ruG+J55TPKc50DKqR+XzPHP7QkwvA3S53UmFHX3Co/LxscsLL9GJ
ti6y+0NCUnW2soTL9B413iPGetQw7SnKjWnHmvJGUU6L2yU8cmMwIvKeah64
YhSPqs5x/dbZS+RgHvVi1Xm5jvULbZt4z2wWFi35I3r6O3+usfrbKn9Gq9ZK
VnLWRFnxtMqf0vLVUZ5aFWXZSpU/oWUr/oSWqiz/E/oWgy/nf6vL+TpiXWU7
fVn6OjjR+mPbtXJttM28/XO/8Yf0+7//r8R58S//1b+gOXP/o/k8aooSe29Z
LTxBqMvJ/APzEUw/4Y4L1PFzC/mv7IwrJxqbO/cUaM8G/bcK4vyrL5oHnSPH
1roPPCM+l7G+4j2HkvWoPi1H5rnupohP+h0Oz3+1f0/64GCHW+wDf1Y5cF43
jnke8wgRX3IeNUXvSdj7Rx6k1rU7tWWqZ56oHJhRHtW9l+3L/PVivwauWijc
LXPDriPF4riKvhVeUudR2T5zDxfpyiXHd+WYTcc379L3Sn3c47etWiUQuVru
Axcxn9yhHE+ej1S8Ifd51F9w1zqGaXButE6eqx2m3zgNt754SJSllim89fKd
Wh415Kqljmce0PKhfAxAX15WrM/lbdPl1VWP2r6vTFyjVZ1GFO3zcdb+y2Mf
Y3//eNSb7Jwu1+ardjC/wD0q9w38wGieIuQi257l1NNsF8kJsUzJm/JcZ8i6
b8Q2NLyXSd13ZKzY/s58upmWSlxGXR9sFjlVt5Ir496V59punSgT3jSoeJS2
elY+86h8Oy23G3BRt8nnqE4nnYwbrimKHkuhvVcPyViLaYQ/f+D58fo31pH1
nR9Qc6Ec823LnEMuh4d6Tq8gR42Hwl4Hu3f4qZlpzQePel8yUd+Z1G2JjrkI
tZVT3Zx7/05fM3vUBYv+C6W/8reGtyP340fpv/zRl+kP//OX6Ymlf0xHTz5s
uO+Jh393L3/1uptp/Wcf09Pnr9DFfv7duBWar/zW2fNUy8fU2qSv2+sYYPc8
nkc9TydaW2jjZ2eEX/xsIMwWNw1f1lOblEddzXwkH7s76G6hZ/I/opfqnOTx
uWiT8Jt9lHoml54quhmbRw2EqclhoTWfnRd+VPWoqy9LX1tps9DK/CJ6s80r
ng3zsb7qOmr98e0xCzN1rC/nsSf+q/CmX/nL36Mdu74q8rKjrT9VHtXJ82P8
/WOrqI/5Bp63alXyVt6cDeKz1jUbqOPF+dSWXizm8okxrg8vJU/+kRgf6vzR
enLw+XeLZQ6zJ/MZ7bPey9zn5sq4/Yktwge5fvhk7DzAb2aNyaOqnpCXHWpV
yp6/iroyU7XxwK4N0ld2pO+Mjs1VfMloedRE/eL8STb1HFTycI9IL+fa8JBs
j24s6vT1qLJ/Hetk3Cb8oeLP+ZhVnq/kedaYPCrvv7mr5Pxc9vKeWHf3vo+r
j6PmTDtEzrJAtuOlgqjXY3pT6/AcXT1iHcM0qJtjKnPsFP3OrYWpNHD9ArUp
uWBtLECh1H1PkVOMJW9dnUptTz6k7b//yj5y/nCVaJcYW8B9ja6MeB2rHlWc
PzyPKvriQXK9vlOsIzxqIu98P3nUYLUYv2vZmkIVDL1HFXNAmTZuvSQ9LPcL
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
EdQHLsd0O8ipUsmo5c/tFPfuLGkdg3vXDjnPdX2NOJ53u/zi17Nl2/aZQNg7
e+ZJnutO4/XpJKazEJwpvk5Mt2HgTNQJEkF94HJMt4OcKh3XTCr7xvNS95PX
pXb981J8fWT5he+tl/NzyaimnC6+Sw4ena/7zXa8eyOmsfcyb5LDJxjfOxrT
WQjOFF8nptswcCbqBImgPnA5pttBTpVqRm08Uhcztld950zJDXOl+Xg9Y30B
ON545pyGpT+Vji2PpLSO7iKRwcINY9x+jdSHrks8e64ErPfczlfmX3Gd9d98
UXpyj9tOHBb36geM5sGmH7tEhl1S74BsOlEZtfrDg9Jdnq95zudKy6GV4rqK
9bQ2BGS47o2kb0tETW629F6ytu9CvnRZuisKpLt4hxSlaR90NHmk75NV9u9r
lkpbSb543eq71t+Xi2sj1z8999Y2/bznno4si9l/57Kk5s17peDZFeK5VGAv
K8nV/++1fm8vuSj+1j1XtX+TbVuaaN+WWvunM2991LIF0lpwUCrWzhyX52sq
94ivcsuIWmnZtSSyzDoWHWdfv2ytuJ5ZkNZj4no5QwIBj1zaMMvIcUikTkxv
x0Qpfm2ddF8qlYHGSunK22zXgVUTXcU7pWR55O+45sRBaXz7NrFrNluqo45d
yVvbpT1npfHXMpH1gVipZNSipe9fYTaql4wKwNHGM+c0/6xMfBcyUlpH/V0P
SOP914++/i2umPza+PhSafhygplwsFo6f/OeeA7n6Xfr3gNPmcuEc26R5sfu
Np5LJzKjttZ7Zbg1X9o/zZLOkgJ9ffxA59GYHJZQW/DVJ6Rq661J35aIqv07
pbMgS7qbPRLoq5T2s9nS/tH6tOQK10sbdZ6oWjdLCjdvs1+/xyXuEzulp936
xV8p54Nt2a5Ou0XRtuv2Ufefp8b+TNy974fS5rK2sSBfr6/33FG9/dU/X2s9
l1dqxiG7jHedJOLiEfv6lZ1HHrSXLV8sQ9brrR2nrNZaa+376i0jlqnrZta+
aj+n68fbrWNYFpNH4rmbvdId2uZ01JTKqDI+xzlddWJ6OyZCxRH7nOK9lCut
J7PEZ/0x+pvfFdemDP05qq8q8rlZu1UDPTlWDSy/RwbUH+2gS8qCNVN+vMJ6
3A7jr2ci6wOxUsmoVTsqdR325e2QoutnysWNeTHX+G1c/dhVr5uMCmAijGfO
UVlwRB/ojXdLX1ln+K2y+z07G7ZkHA4vG+4aEH/7cd2v2JnbKQMfvyh1X1kt
Pk/oHgPifu4lfb7XP1bebLx5ngxabfv2tfPGfI7o7fKefjH8e8PavGA/5rVW
O7c6/Li+bPs+9d/aIP7gd2AHBjpVmJLGhVYm/mFO+L6q/7ZlY+Q1+KoOS4N6
rhcyI+cFvZ23yEBVZNt6di+TxjXWenrt1xt9f3+HSz9P3a2r7ef2RdbTfP+1
kzqjuus90pkVyVwFK5bKoNofqr22Zqn0tIUOtlfaDz1qt9kOZEe+622wUqo2
zNR9WkOVm6XwlY0yOCDhx7TuvC18W8HTs6WpsDK8X4fqs3QWvnAweM4OrtTv
zg23D6OVHSwQXyiTWG3Jvr7gY6z2ZMnyG6W5NDKeaqB0s86wxa9liM8XfkKp
2To3Zp0Xs0usMtqjt627x7rLhdjMU/qjG/X/C7e8Yz1XvbR+am1/T244H9v7
777w/VvqovuMF4h3yCM16yJZpatDpCuNeWistqWJ9m34OFrHvWHrLH2M1OvX
GXW0WrJu7+/3hLOca9M28fe6dJ5sLg/e12rD1f3ylcgxVH/jOcv0/UfLqM2V
wcf5yvRnC66Xt1l/r6V2Rh1lGyLbrJ6qSHzD1vMF821jmUdnGvXvsyufk+Fh
t1Stf0Q8TeE3QOk9Y/cbR29v7bbNOqNWW8dd5SFVoh5rm6Nr3+/OSts4gKup
ExP1MaGee07v9+i/TfX3WLJ2hv4MIfT+1fPRk/o29XesP6dQNRl8/xqut4+9
eo9IZRzIZGK6HeRUKV3X91P7vaFp9f32sgWv2PVnnY/Kr/I7Z8ioACbSRGfU
juxOnT8b5li/f22Dfg91r3lJ/79ttepLvEbaM6utplyezmyeswM6T6o+2VCO
q7/rbj3GV/ejFmXY6549V/xWe7Jj7fyY52iw8mX3wQ0jtis6o7bva9brblyR
YzXirByp+mJvWqozcNvqO2XYyqe9B1fr+zauVhlyQJqiMqr7B3dL7c1P2f9+
0srIs66TPuslqGzde16k/5j92Ib7b5Haf/lpOOPWzZkrDQuvlaZNKiPnSV1w
He3r7P2g8nmg/bDU3faiXt71xjK9/PLjnydPRo3vQ2qu8uo2WaPV7g502m3p
4u27dbu+etN6fX618+oCcZdY9fGLueG8oPocxJuvs2fxq0vl3DMzwreV7Dqh
2/CXXp2r84JqCw6WvhTMCV5pUmPtnn1CBq0nGK1fK6atqPo7fKodmSUX1s6R
0t15OkNWrJupx/KpSNOe+S3ps56j78wL+jG1eVaGHcqP6SNW6/RdekP3+Xmt
53XvvG3U/dRW7xVv0Sp9v2Fr3c1vzgvvv64joXbwAp1z1Wuyt3FxJKMF19Na
GzWueBzblibat2pfDlW9IQ3FHn0szi9fKAPB1z9qLa1fErN/ovOkzpq+Sql+
9VZxrVks9Zn2GPRyVSvBftHRMqo6Hh0fvCC9fVaptVoZ4/mN4XWOug1WjmxT
fwM5jwWPjzrOL+jPanzBzFm5ZpZcyKnQ47QbrNwqvflyfo1V39vsfnfVrx6z
vVYGUo9r2r/T7kfPs+tGffbTvlfVymwp37rIaAYx8dwTSX3eIQG3VKwZOc7c
/iwkX6ozc/X7eePWWdJcG8qo9t9s3Vt2jug79ZiUZBaQUae5VDJq00k7o7Zu
CvaXLnpd15a/I19Kb5glhTPIqACcbaIzau/5AStHzov5veudd3SfVGg+Zu3N
L4Z/D2XUuntfDPejDrvPS8tD18auPyqjxj9HvFC2DPdLBpql5bHr7axo5Udf
m03d3vbMQxIY6pSm8Bji62R4oFNnVH1/r52b6+6y87avpVOGuzp1v2uflU2b
Nx4OP4/33GFpmHd3uB810N8sHa8slsa1wYyq8mswm+v9cMdP9X6wM+qAnZ3V
9lv3n4oZtb3Z2g2Vm3SeUgfb12uzDrjUvLXDynmuEX1AobxQmJEhQ8F+CH9P
ZWx+zSmJ9IM+bY+hG67bYWXUAp0dQ+tsqR25TUp8RlWZ0m7zB8eZBiLb6rdu
a8t8UudYf69bhvut5X1eCXTHZtR6V10wo1rrG9HvEmzTvrTR7q6tzZcOV67O
qGq71W3hfrtgx4xaf3j+5SgZtaXWOy7t3fGuk0TYx0cdX7tPOuApE9+Q3U86
Wi1Vb7Qy6rBXZwT1eN1XPeSK5E+rBvX+X/+c9HUHH6/6zoOfgYyVUbuP3G/3
e6q/1prScN/saNug5ozanzPY9Va046CuxWorC6u+zg7rMb2/f0G/HlVrakxo
dI2ExojGbG9UP50Ex5HrWgn181tvSn3Fb4zLvORE68REfUwk/TmB9RM9hiF8
m5VRA1adqRqqL2rVn6f0dQRrIPg3qx5XvPOI3Vde2ypD1WTU6SwdGXXMH/Ue
wXxUAA427hk11M954zVa18cD4m/JtHPYV1brvkr306v0/3sObpDGxUulv1pG
9KM2WMsb77xeZ0Q1plf3rW5xia9y24iMqp5juMF+jvolq8Xz3osjtmvowjZ9
e+Mzh+1+TSv/6TG3qh91oZ1F3T9+0brP9fr51Njdpgfulo4D1XZeDGXU4WCm
DI7HdT9lZ+OWNS/q+zR/b5l9XaeFdh9pZ8b3pPmxW+z+26xOPca4OdSPGl6H
fd0n1R+s+lFrgxm1aeHY2X9SZtRgH1Lhmnuk8Uypfu1qvKPqTw3PTX32CWlS
11MK5jX3bnVdmtnSdDZbj58N95X+fIVUvqrmni7QfVlqWei2ssw83behxgar
TKhuV31WOl8Ou8LZcbTcrIyWUTsP2ffT67bamnrd1nPXZ2dYuWSRzqj9Z+1+
zZLX1kn9O/eOWKfOqNa/a87U6e1rfNu+5o66Vkpv1fvSXObR2bPlxE5py98p
rZ/k6z44tY/UtvZ+tErviwbV3u3JjeT3sfpRTz057m1LE+3bmOOz4gkZsif3
6hw4Wi2pfaZqoP9Tu59b779gdojOn3bfvD2+WvfFR+fYUTOqXRPF298Jfihl
Z9rRt8HOmeFjEjXWs33vPCl846D9i69Mjz9X6xCPvQ41rl3/Ley8LWZb7Pmo
Iq3W34geA6y3d6Fc2vkdXRul6jWo/GRgvqrJ+phYs/X88UBXvlRsmKOX1RzL
Fc8n6+2MGhr/bS3vaLYPsf7sIe5v9lJehX34467NNVWZbgc5VSoZteVT7+Uz
KtdMAuBw45lzoudr2p/bWVnwtrtloDY8cdDKpcH8eMdTMlDVrOd7dv++OpxR
u052ivfj1dL2rsteheqTHOrU/Z51920Iz0l1f9cek9u2yp6PGv0c3e+vHpFR
vacjGU+PDQ7m5uj5qP6W43pOad3sW8RjbZPatr7Tdl+rHuurMm1Uv2dz1HxU
dR81Z7Q3OC9WbbeaX9r81PaYXeLZ8Yi9n4LriV5HwArrTWreqc6uUyujhvsB
Qz9D9cHrW96gxzv2dETOr0NVO3ROqPjwRGQO8nC9vgamWo+vcpPUBTOubrwP
e/T43dBt+vmi5owOu3P1mEmdL4diM+poczZ1nowb6xvqR41ft8qUaj6i6tf1
hTu1RLqCcxlDdB9uz9Fwn1b0nEH10+v6MDi2d3bM41Rf8+CFTXHbaufygWDm
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
gjrB5YxVJ5x3EG2s8850l67vRy1ftUcCKpUW75WLD1i/8/2oACYB2gmIp2oi
vk7IHYinaoI6wZWMViecdxBvtPPOdJe2+agLXhG/lVF7c7YwHxXApGH6vARn
iq8T0+1cOBN1gkRw3kEiTLeHnCb9GfXHZFSDdp15WB4/8hNZtH+X3LN/L6Cp
elB1oerDdI06jelzEpwpvk5Mt3HhTNQJEsF5B4kw3R5ympTG+j6wUiq/97xU
Pr5KKp8/qMf6DpUf1eN81fKqJ5/ku2cmkMofZFNcjqoPcmos0+ckOFN8nZhu
48KZqBMkgvMOEmG6PeQ0qWTUVhfXTHIS1U9mOgPB+VSdmK5VJzF9ToIzxdeJ
6TYunIk6QSI47yARpttDTpNKRq07UMd3zzgIfahIhKoT07XqJKbPSXCm+Dox
3caFM1EnSATnHSTCdHvIadI2HzXNyKjJM519MHmYrlUnMX1OSkbJW9ulPWdl
+Pei1zKk+2KWnF8Te43Imtxsadp5b9zjZ0uzK1fq37w1oedybdom/t58KVk+
Q1obAjJc94bx12+yrWC6jZua66Rr73vS8OXQ79dIR2aOtK+7O+Z+DUt/Kp1v
LBvx+JYN70nHK4sd8DqcJ511ovZ/x5ZHRj1utbdv0B/9Ny0c39fTdbJTBj5+
ccTyph+7RIZdUp/EuhrX5Ij0Hh/lMddJ21uZMlBaJn2nj0vzQ9dL3ey5MuQR
aV87L7ltnnNdUvefqP14pTpJx3tU9YcHpbs8X/Ocz5WWQyvFdRXrudz7e6rv
/epc1HvJ2r4L+dJl6a4okO7iHVKUjvfpFUtl0OeV5rfn2b+vWSptJfnidVdK
T9n7cnGtOi8ukNaCg1Kxdmb4cfHnUX0fV17sOfPZFdJx9nW9ned+mRHez0r7
R69IafC6zIWbt0vAVykXl89M/fWMct6Z7lLKqNcvlN52kb5Tb8R+x8wd9vWT
mtd9jYw6gUznHkweJ89+xXi9OoXpLJSM8uMV4m/eof/t2pRhX6cub9XIdkVd
QMRfJmXLI9m1dNcJ3TbrOvLgFZ9Ht3Oez7DOvaU6oxa/+oRUbU0s204V8XUy
ke3ZtJt9iwQCA9J8ZySHqPpomBOXQzbl6RoJ3U+36W9+yv5eudMbzL8OB0pn
nTT/rEx8FzJGHDc7T10nzd9dmlRGvBqeswPi/Xj1yNvm3CLNj92d1Lp0PQ3n
xW7zjXfrLCqBZun89TbpPlFt19wDt4jfJ9Kxdn5Sz9FzfkA6X0nmMROzH69U
J+l4j2qt98pwq5WZPs2SzpICfT4IdB6Vc08n9702l3t/T/W9v2r/TuksyJLu
Zo8E+iql/Wy2lfHWX1WWjleWadWXN1/nyMLN2+zX73GJ+8RO6bGyifgr5fyK
r8pQwCu1G2aFHxd9HtWvcftue+xnT244O7t+vF2/R6rz38XsEquO66X9dJa0
u3LF51Prrpdqvc7Z0jsg0nnoyufVqznvTHepZNTi72aHx/RWzouM6a074LaX
W8fw4qxZZNQJYjr3YPLYd9h5f1ummM5CyVDnSl/1Jjm7aq0+H/d9smrU+zVX
evRbcPj25YvF67Pfljuy7tOfN/e0ecLXDWg/9KjdnvjwhF6v+vF1W7cPuvQ5
uqncI0OVm6XwlY32+Tn405mzzFr3PdLXp97vvSPW11RYGb6v352Vns/OJ0h8
nUxkezbtrKwzPNApjVYm7chutg5G9Yh8qjT+MMc+9lXvxWQW9dOfY/ettWw8
HD6mvqrD0mAt6zhQHV423HjcXvetq+3mQaheBqul+f5rpe4rq8UXKj0ZEPeT
15vfP2nMHqmsS/VVek9H92Fep4+bzqhqfwasY2j9u/7BF8N/boH+amlS+zW4
vyX4ecLljknoPnWLoo6FtW73U/Pszy+ijltftr090X2iTS9kRt4E+sqk8dZb
ZKCqM7IoJ0Pfr3HtyIzadrB5RN9q/cK5uh81lFFVHUZ/JuL5tFPn0JjnterJ
/ZPjkdfYcFjq590dtR0D9jgBa72D7cHX05cXsx87cyPbHP1a6+Y9IAO1A8H9
YP8/6f7dK9RJOt6j3PUe6cy6PbJM9Sta29qT8+CY7/HlB7LD7/EyWClVG2bG
vL8PDoQrRFp33ha+TWWx6PfzofosnYUvHLQ/1wqt1O/OjflsNKTsYIF17toS
PB+FzhkSPMfcKM2lkbmDA6WbdYYtfi0jcr4ZqpearXNj1qkyer8+x82W7h7r
Lhe2xNxe+qMb7XPfkEdq1kUyaqm1LdF9w51WffSfe1cGre1xW69ZLVPjiAJD
rnBGDW97UFuDVXN1ds6tzqsT36X0jDMy3R5ymlQyatMJu/673lsde9uMJeL1
2jVe9RXmo04U07kHk8fbu+YYr1enMJ2FknHxiHVubXOJT53be46Oeb/WWo/0
luTbnx+umSWXztTpz5eHfPbnvY1WuyPQaWdG+zNkr1RvWq+bDHZbZra0WPcR
6xyt2iGttV4Zts7RrjWLpT7THk9Wrtom+nPmRTJgrdd36V29vku/L7WXr/iq
bi+1771Pr6986yLj+y+VtoLpLJQSK6P6ujql5/fV+pzd+ug1o2ekTXniPXdY
Z4W2Vf8odYu36/6uvvMDOjupPlX1435yns5Pfdbq1LjQpu89JY13XqufR/WR
qTxRe9uLdvtAjx2+RrqLrOZo4QbdVxjKKPV33S31Nzpg/6Qxe6SyrtBnBMPW
sbIN6DylMqq9Pwek6dbr9T7ufs8ek936tnUQvMelLri/u632mM6Rlzkm9n3s
9YRyWWtGph7PrTNqn8seF/71bfr+6vlDfaJ1wRqwx4lfJ10f5EjLQ/8kLc88
ZR/LO18MP2a0jNpdOCB9B0aOJ4/OqM1bXLpWwo9x2Rm197yVJY7ZfbwN99+i
/9+jbtt8j/63ypzDDe/ZtfXIdr2/Gm+eJ8NWe3SwWI2ZvjayHxf+w5ivVa3H
33LYfj132OMIku3fvVKdpOM9SmXU7rhxMc1VXp2/rvwev0DcJdax+cXc8Pu7
6l9U/ZLqPb/41aVy7pnIe3+JGodjnU8uvTpX599+qzQHS18KZlSvNL1tZbtn
n9A5L36b9LnLynnhXGhlVHXOGLZy7oW1c6R0d57u06pYN1OPsVWxtD3zW9Jn
PUffmRf0Y2qtHChD+TF9xOr163FBKodG5csY1nOpbVUfxgz32wLWfe3cHewv
tV5X+fKZUmE9h9pnenlcRo0f73w+fP6boc/Lgc49aekbNt0ecpqUMupJO6M2
rb5/xG2Nwfza+NTtZNQJYjr3YPLYvvNG4/XqFKazUDJCn1l7a126rdHz0ZN6
edPFVvuz5oBbLm2Ypc/dHVY2rC/ziL+7XgIBr9RsvFe3C1RGVRlWnbN9vTYZ
dkvNL1/XmTTc1/kj69wdHOsbzqjrn5O+7uBj1efgVnum2Mqoqn1gZ1Hr3P5y
ZIxw+LNxv1f6it9Iyzl8osTXiekslJLgXD+VN3tdnbrvQvV/6r6x4E/bqnnB
fjwrv3w/R99X9dWptnnnR3ZGrbvLnsvna7EzlLq9z8oM7u05up/K12b3S7Wv
nR/OAo3BObAqr+jcce+L4b67Yfd5K99ca37/pDF7pLIulQN9VZnS+MAD0vT4
A9K4ZLXVTo7PqHbmGm5r1sfA1z5g5alQRo3s7yseEzWOWK37y7HbEDPW16qb
UD9uKG/W/ctPrb/7uPG71v16zlTrPkf9fIHOMTOq56zE9RVH1hHKqKoOfZXb
wrf1V9vjeZs3Hg7376rPUlTfcCi/6nV/2ikBa3vVNujtGGqWRmt/2Z+52P2g
0Rl1rNfaq8cPR/pNQ/246ayTdLxHjZZR25utXV65afT3+Ld2xL7HB4Xe3wsz
MmQo2I/q76mMza85sX2JKs+qfsQLBwt0dgyts6V25DYp8Rk1+pyhMp7KiaFt
9Vu3tWU+qc9X/l63zpW+Pq8EumMzquo7tTOqtT5rmzuz7hu5n9RtPq+4M5dJ
xZvfkco3H5EGV6TfU/UTq+fucmWLp9Y+jzZsnXXFjKrzfDAz630QzKvpPu9M
d+nIqJ73X4i9bdaj4X7UavpRJ4zp3IPJg4waYToLJUOdK9Xnterf53YetPu0
Rvns2G673C8FK56QYbE/71afm6t2gcqo6rP28LylZ5+QJnWtjZc26v4C9+4l
9rm7rHVEP6r9OXuuzpr6c3V9Dl8UXq96nD6364y6UC7t/I5uu4TmwtZEzQly
uvg6MZ2FUqLa39Y5ufUh1X96jQzUWU2qlswRc/JUNgj1X/Wrjxd6D0dyixp7
GRwrqsaEquUta17U4zx13Tz5j6L61dS4ykif3UD42jShdTcsXiqNd14fvu+o
eWUSSWedRO//8HEbGD2jdu9+St+nYclT0vLkvNj9PTuRY3JdzHqan9+u+0bt
Yx08JsEx4jH9qOEamK9rqWN3pjR//2f2+NnZwfnLwTm0o81Htfs3JXJtqPlL
pe/T4+EsqTJq/b8d1uPR1dh0NTY81I/Z/L1ldt/mQrsvVy1TedKzw76eV9fH
AzLcEKzreQ9I27qlMdlX3WdERh3ltbYftMfDtzx+t7RszAxn/HTWSTreo/T7
fM5j+t+Fa+6RxjOlelvrXp015nu8P/weP1uazmbr8bPhvtKfr5DKV2/V54re
PtHLQrfpuZ8Btx4brHKfut1b9IKdL4dd4ew4Wm4OnbviM2ronKHX7a+31209
d312Rnh8Tv/Zl/R9Sl5bJ/Xv3Dvi9Yeur1Bzpk5vX+Pb9vlLXRept+p9KV4R
HOsbde4Jb8tz9pyZrvx3xZ3/vrh/v0N6O62XY+XXyHkslFHtcb2Fz8yWyv27
9eNC+173o7a+Oy7nnekulYx64ZWC8Gew7jdekOIZM6Vo4TLpKgt+SGrVXPks
MupEMZ17MHmQUSNMZ6FkqHPlUHXk89zKHPvz50tx2S/63F20YbH9GbcaXxX6
7HrFUunpiHy/9VDVDp07q4/lhZcND0h43Jea3+qr3GTPR/VLZO5psB9VtSXC
/ajq3O61sutzK8JzYPVzXNrDfFRTotrf4d+9kTmmo2akOXOlPtjHptryoTGW
zVHzUVUuUXNMQ3MfQ2Wh5+7pLDMyo7a967IfqmpjqFNaHmM+6qj7P+64xeTL
e1/UuSv007n5gRH7O5FjErueAWlbPV+Pf430LUaeX49DDvafxtTAYLXOl6H5
m/r5gvM9ox8T8zqj55WqVRTvk4a59ucour/TypWq7zS0XaGM2FsWmSvr73Dp
/uCWzTnB9qa1HWo+am14QqUMnMoIfz4zWj/qWK9V/d7+To4eaz1Ykaf7/Z3Y
jxq67kDkTbbeymjBzyzHeI+v+PCEzvz6Z9i+7k/o/b0umHF1ABv26PG7odv0
80XNGR125+rryet8ORSbUUe7Lp+e0xk31jd0zohft+ovPW9lQ9Wv6wtPnrWy
pLr+QdQ6VZ+tysmh36Pny6qf3rObxRWcj1obl1HVttQVtobH9oao6/Sqc2r1
66/b57HlUXNuwxvokc6cVeHH1Kp+2bj5quk670x3KV3Xd8YSfV3fsX7a3/ju
Va+bjJo807kHkwcZNcJ0FpqMitYuML4N4y2+TkxnIce78ZpJP7f0aji6ThI9
Jkl+f0vYTdektp4vX+fImmn8wXvSn/eeNN41VxqXZej2rPup1D5Lcdp5p+iH
s41vQ6rOvXtCX7s3foxtsXV+mrB5JcE+4bZdt6dlfabbQ06T8vejzlom3VVx
n+WIV9xvrE5pvWTU5JnOPZg8yKgRps+zcKb4OjHdboYzUSdT0Pyl0numWvej
qvmtHVtGucZTkjjvjAMrH3oa6+3rNRnahqJt22XInZuWuaijnXemu5QzalDx
gkel4nvPS+VjT0rJzFly8fvbxdtUKZXzGes7UUznHkweZNQI4+dZOFJ8nRhv
N8ORqBMkgvMOEmG6PeQ06cqo2vUL5dJPs2TQE+lPrVpARp0opnMPJg8yaoTp
cxKcKb5OTLdx4UzUCRLBeQeJMN0ecpq0ZNTZS6Tx/fyYOfzqZ7A6Xy7MmkVG
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
LwCYqtJ6Xd/562PG/rpf+RoZdQKZzj2YPMioEabbuHAm6gSJMP3+BQBTVVoy
6vULpXF/aVQ69Urrz16QousZ6zuRTOceTB5k1AjTbdxklLy1XdpzVoZ/L3ot
Q7ovZsn5NdHXnF0grQXZUrFuZuzjVzwhnWVZcmFNYtenvXikQIaqN495u+vl
bfrdvmbDrNjblt8j/f2ekcsnGSfWyblfWse7PD+stzpXKtbOHPfnrdyzU3rq
KmWg0SWth5aNcp/01NxkZPr9CwCmqlQz6vmVe2TYF0mnffl75fwNVz/Gl4x6
9UznHkweZNQI023cZJQfrxB/8w79b9emDD1upTdvVez9rIzotW4YvrQjZnlj
WevomXIMZQcLZLjujcvcZ4FU7VwhRVHLXM/YyweGPFJLRk27i9kl1oGtl/az
WdLhypbOgvfHPf+1VHp03XRbz+UuyNf/7v3oyXGpucnI9PsXAExVqWTUugN1
I75rZqjNI/4Br/jV1NRAm1Tx3TMTxnTuweRBRo0w3cZNNqP4qjfJ2VVrdT7t
+2TVyPtZeWEg+Llhy9vz9DLXpm2ivzEp4JFLVl4ofi1DfKHPFofqpWbrXOt+
s6W5NPKe7uuzbqq0+1HLD0Su4R7oLZOqDTPF9dJGCYyyvkC/Rz+PyiVNhZXh
9fndWTF51umcWCflOSUyZB3/+OMd3W+tjrW/1yWlL2+0j5k/eJ2I3nypOphn
H6PgsRpyn7dur5Tzy+2ce8G6PdCdGz5O53YeCddM6PkK194z8jheZc0VvrIx
ssz66cxZptfV1xe13eKV9kOP6nU6sZ5Mv38BwFSV0vejuiLXSBr9x0tGnUCm
cw8mDzJqhOk2bjLU+NvhNpf4VPjoOTr6/ZYvloG+Vukqq7eyQL64rGVdnSKD
l/J1pqzZeJv0DVj59swL+v61eXX6fhd359l54lUrr65ZKv3WfXxVW6TgOTsP
2zlhtrSUWxm0x8oxL2dYGcQbXp+3dLN+rqojefq9v2bjEhlUj9t7n35c+dZF
xvdfKtnD9PaEjr/Kd52uXOkqyZeuM69LkXW8vVH91moMdsBXKiXB3Kk+S1DH
r/PIo+H1XMi0j1HtT7+qs2X3kQf1MVLHsUv/O/h8qt/WOtauK23bVdbcuTWL
pT5zpb5/ucrP/jJruxfpbfJdeldn0Eu/L7WXr/iqI+vJ9PsXAExVqWTUc3cu
k4rHV8nFh5eN9I1VUv7Qo1c9J5WMmjzTuQeTBxk1wnQbNxkXgv1g3lqXzh09
aszl8nukt0d1LFkRsztfilfYmaV63a06Fww2qdxg96sFAio73qszgL/XLcP9
HvH1efXjqnNKxVe9JfxcalyxGuvr+vF2/fhwn9WPrN+tDFQazqhWFh22csi6
YF+btT3qd5WZwv2yfq/0Fb9x5azjIE6sE51RByvDY3078jbbGXXYK41b7f1f
uOUdfbx0RlXZ0TrWg6UvhdcRGiPetvs+e50qh3pzpfSN3bpPtWx5ZOywPbbY
JeeejhtPnKaaK3npOenr9lj15NH99uK11mVlVDVu2M6iKnNnhDO3E+vJ9PsX
AExVab2ubxqRUZNnOvdg8iCjRphu4yaVUazMEOjco/99budB3Vx377wtLj9E
+tWKXt+t79O2a54UPB/KlHZe6D9r55aS19ZJ/Tv3ynmVfwNuPY5XraO3z+5H
DfXDuXcv0fdvLLP7UQtfjlqfP7K+8gMngv2ot8mlnd/R2bZ01wm9HZNpXqIT
68Qe670lbvlsfaz6P7X7KBuKWnU+PLf8RmlvtsfEhrPcs0/ovsiYMeIrlspg
cCB336m4eaYrV8iwtXygbIece2aGzqbukgJp2XVfWmpOfQ6i8rHavhJVIzpb
2xm185Ddn6vHDOuMutCR9WT6/QsApioyanKcnFEX7d9lPPtgEsjcRUaNYrqN
m2xGGaqOXMeoMqdgxHzBgrixn2VbF9ttfStTqvtWrZslhRkZ9njh4E+Xmgdo
ZR33xch8VL8vMh+14sMT9tzCqLmEun9L9ZGpuYbbtslwcH0Bn9eej5qxUrxR
cw2HLu1xxPzBq80eprcndPx9o1zH6sLe7PDxUdeDUHNPS4L9pXpeZ7C/syq7
IHKMrJ/BC/bxrVZjbwNuqVgz8hrBhRkbZXAgchwDfZXB+ctR97vKmtPzUf0S
mXsa7EdVeTbcj6oyqtfKrs+tcGQ9mX7/AoCpioyaHCdn1MeP/MR8/oHjPbhr
g7yf9WXj9eoUptu4cKbpUCelb2VI4+6V0tUeOx54NK5nFsi5tTeOy3YUrV1g
fF+kq04AAOlBRk2OkzPqrjMP05eKy8vcJWt/dZccz7/deL06hek2LpxpOtRJ
5YfZur/c15IbvsYSUqsTAEB6kFGT4+SMqqicqvpTF+0jqyKKlU1V/6nKpweP
zjdep05iuo0LZ6JOkAjT718AMFWRUZPj9Iwabd+Ht8i27TMB7c1fz5YPji8w
XpdOY7qNC2eiTpAI0+9fADBVkVGTM5kyqpLnulOOfLRQDuUswDR29OStxmvR
qUy3ceFM1AkSYfr9CwCmKjJqciZbRgVweWefYR4eYqmaoE5wJaPVCQAgPcio
ySGjAlPL6b3zyR8IU7WgaoI6weWMVScAgPQgoyaHjAoAAAAA44eMmhwyKgAA
AACMHzJqcsioAAAAADB+yKjJIaMCAAAAwPghoyaHjAoAAAAA44eMmhwyKgAA
AACMHzJqcsioAAAAADB+yKjJIaMCAAAAwPghoyaHjAoAAAAA44eMmhwyKgAA
AACMHzJqcsioAAAAADB+yKjJIaMCAAAAwPghoyaHjAoAAAAA44eMmhwyKgAA
AACMHzJqcsioAAAAADB+yKjJIaMCAAAAwPghoyaHjAoAAAAA44eMmhwyKgAA
AACMHzJqcsioAAAAADB+yKjJIaMCAAAAwPghoyaHjAoAAAAA44eMmhwyKgAA
AACMHzJqcsioAAAAADB+yKjJIaMCAAAAwPghoyaHjAoAAAAA44eMmhwyKgAA
AACMHzJqcsioAAAAADB+yKjJIaMCAAAAwPghoyaHjAoAAAAA44eMmhwyKgAA
AACMn1Pv3mY8j47mrbVkVAAAAACYbvKO3mE8j8b79PoZsm37TDIqAAAAAEwz
pwvulLOzZhvPpdGO3mxn1Kxj843vn3hkVAAAAAAYXx//aL7xXBrtFz+xM+rx
/NuN75t4ZFQAAAAAGH8HV84xnk0/uWGGvLXOzqe/+u0c4/tkNGRUAAAAAJgY
b704Qw7dcYOcnDljQrPpiRtnyIF7bpDXX7PzqXL05K3G98doyKgAAAAAMDFO
nL5D3vz17HBONOXwiYXG98VYyKgAAAAAMHHyC++UzMO3yK79N8lvds+dMO9l
3iR7P7jZkXNQo5FRAQAAAABOQUYFAAAAADgFGRUAAAAA4BRkVAAAAACAU5BR
AQAAAABOQUYFAAAAADgFGRUAAAAA4BRkVAAAAACAU5BRAQAAAABOQUYFAAAA
ADgFGRUAAAAA4BRkVAAAAACAU5BRAQAAAABOQUYFAAAAADgFGRUAAAAA4BRk
VAAAAACAU5BRAQAAAABOQUYFAAAAADgFGRUAAAAA4BRkVAAAAACAU5BRAQAA
AABOQUYFAAAAADgFGRUAAAAA4BRkVAAAAACAU5BRAQAAAABOQUYFppbTe+fL
2WdmSMHTNwC6FlRNmK5LAACARJFRgamFfIp4qiZM1yUAAECiyKjA1GI6D8GZ
TNclAABAopyeUXedeVgeP/ITWbR/l9yzfy+gqXpQdaHqw3SNOo3pLARnMl2X
AAAAiXJyRlX5g2yKy1H1QU6NZToLwZlM1yUAAECinJxRVT+Z6QwE51N1YrpW
ncR0FoIzma5LAACARDk5o9KHikSoOjFdq05iOgvBmUzXJQAAQKKcnFFNZx9M
HqZr1UlSyTE1Jw5K49u3RZY9u0I6zr4uRda/WxsCMlz3xojHXDxSIEPVm0cs
d23aJv7efClZfvXXGa7JzZamnffGLZ8tza5cqX/z1oTW4Xo5QwIBj1zaMCvl
nJeO7VFaaz3SdeTB0W9ffo/0D4h0Zt1HRgUAANMSGRVTgeladZJUckx7s1d6
ciLZyfXj7SL+Mp0zi199Qqq2jsxhZQcLRmRXl/r/81Y29JWmlFFb6wL6+cui
1lG664SonzEz3mgZVbxSk4aMmvr2zNb/b7EyavdlMqrXb2XUQ4m9PjIqAACY
asiomAryCu80Xq9OkUqOcdd7pDPr9siyqJzZVO6RocrNOmc1l9ZJ6MfXJ8Hl
N0jVhyfEH1re7REZdOnHquWB4PJhd67OeBcO5tkLgg/wB5dHb09zpUff1vfJ
qmB+Wyxen33/jqz7pPCVjeLzhTdFOnOW6YzX1xdcr/X8pcGMWr1ulrg2ZejF
Hut+5Qeyw9sa6C2TyldWynDAKw1bZ0WybcAtFWtmJrw9at80FVaGt2eoPkvO
PW29pmefkJ42T3AHeMRvPXGHyqBrlkaWW9vYfujRmIwavY0yXC+V62Ze9bE1
XZcAAACJIqNiKth/5Bbj9eoUqWRUncH8Xhnu92i+ARWd7PG6rbXW8uotUrrb
ypZq7Oyrc3XGUuNSfVVbpOC5tTpP6ZxlZbUWK9PKkEuKn1+nl7fuVBlugXS2
2/e3M6pXmtTYYivDDVp3iu9bVGNie0vy9fNVrpkll87UWf90yZDPznCuNYul
PnOl7rctV+vTfb6LZMCnIl2WXFg7R2dN9fim/Tv1dvTmrRp9W3typbXKeo2X
7D5hlclD/050e0pUn2rcvhksfUkayqz19+bL+TUzpHjbNv3cKqM2Ws8R6MzS
Y6mLt+/W+6N6/b3hjNrebO3CC5v0c5dtXWz3T5NRAQDAFEdGxVTw691zjNer
U6Taj9p3dpNUvPkdqbJUZmaH+0JDGbU8p0R81v9Djyk/XqHH+qr5pyqTFoXW
96PtVhgtldIf25lM9auq3Ou38pzXyl0XDhZY988P33+08a9qezr23if1Vsbz
d9dLIOCVmo336gyqM+r656RP9df6PLo/V+XpYiujqozXvve+cH9ouC/Syo9V
qj9VjWEedVu36/tUvLRShq271786K6ntGX3f7JA23T8dmV+qxlSr16oyr972
XpsMu6V6YySjVqh+6eDGDzXkyoU1Vz9u2nRdAgAAJIqMiqlg+05n1rAJqWbU
riORLOV6eVt4rG8oo55X/ZUBt1RtmKnHuvb22f2irpc26vG87t1L7H7Islad
A8+9vNHuR91lr7cqM0Mqrceqay3JsMseCxt87tEyaveR+6VgxRM6M6o+SdUX
Gx4La2VA8ebq/kXdhznk0v2o0fM57fmo1vNb29Uc7NstDW5TaFsby+x+VLWe
Dis/6rHHrXtG3T+X256yzOh9c4/eN96iF6S5yiuBzqP6tarxyeq51f2jl6u+
5KZDK2PG+la++7yUPjPD2rdrw48howIAgKmOjIqpgIwakXpGjbpm0iYro3rt
flQ1DthXuUmPjXVfjMxHVf2iofmo1cfywsuHg+OEVf6qiJqPqvop67fOtfPc
UGxGjb/uUPSyog2L7X5PK8MNBPtJ9XxUFd783uCUTrsfVfVrhvtRVXa2nlPN
R1V5sqdHdN9mzDYN1UuNtU3q/sU7DupFrTtvu+z+GW171PLoubpq7q0a31uw
Yqn09YSWevXz6vmo1vKeDm9k/mrVDnGp9QW3v7MpOFfVb8+ZrWA+KgAAmAbI
qJgKyKgRqWTUyapo7QLj2+B0pusSAAAgUWRUTAVk1AjTWQjOZLouAQAAEkVG
xVRARo0wnYXgTKbrEgAAIFFkVEwFZNQI01kIzmS6LgEAABJFRk2TrGPyYtE5
2Xa+RJ4/ddT89kT52pkakUCfPH8k0/i2jBcyaoTpLARnMl2XAAAAiSKjpu75
Knf4upze4HcZBvqa5OsGM2lrV40sCv6+5OMyKelqlm9nkVGng7PPXP13aGJq
UjVhui4BAAASRUZNNQ/a3zPx+wt5keVZ2fL9vI90Rrx7f7a83dIdDK5+OXPJ
pe+zKLtI6gZ65VRHf/A2r+wtPK5vG+sxjxY3S2uvW0q9AenvOC/fLqoR93Dw
2zP8Xnm34Hd6vW2B8DdqyEfFx/Syyp4GWaLXfUh+0dgVvr2m5WJ4Oz/q6ZdP
3d0S/HZIKa4vCedcpyOjRpzeO5+cijBVC6omTNclAABAopySUTf+9J/krkV/
Kfs+vCW8zHTuScRrbcMS6K0c8/aftwyIDHfJiyeOylPFdp49WvChLDp6Trqt
LNnvaZLn8j6RQ10+K4926b7XsR6jMqr6aXbXyJNH98sL1W45U3NOHvrdMfmV
ekygU+fQ9ZesDBrokR+ezJEHDu6Ve3PKpHs4at1WCv1VwSl5tqxO59HmhrM6
o34y5Leet0e2Fnwir9bZOTbj2D7j+3i6Z9SPznxF7rjrC/LL38w2vi0AAADA
eHNKRn1nzzz5P/70s/LFL31OHn/yb3VWNZ17Esqo7cPi7zgfsyyUCR88cEyK
hv3S2dkiuy/Vyq6qWt3H2dlcrDPqoPhlY3Zm+DGq7zIjJ2fMxzxa7NY59L7g
86g+0Q3lVZLT0CAn2q20OWxn1G8Wt4bzamR7OuRrB7KlyO+XwvM54W19sb7P
iqxNOqOq53WdOxJcd7ac9wes+54wvo+ne0ZVZt745/JfP/+f5PY7v2D9vZJV
AQAAMHU98d2/k3sXf1G+829/Z9x//8IfyWc+8xntz//8PxnPPYl4qqpbX4/o
+wcicz3/5YNzOqOqTKj6Jgf6OuR4S4ucam218mST/Lb0VEzfpnpMKLNmHDs6
5mMeL2uXgWCf7d3790lmz7AVa/vk46ZmOdLSozOqWt/jZVaW9Y+dUV3nIhl1
5SVr+4fb5KsqTw95ZduJfeGM+onPP2kyqqka/sYjf2P9//+VZcr3Yz3577G+
+1TI32vf+0Gcp/9e/i3actv3l/8vuef+L8qf/Mkf6r+NP7P+Nm6Y+Xnj7x0A
AADAeDiUs0B+u/8m437z/hz50l9/TrfBv/hXn5NHn/hb47knoWyU/anUBwIS
GOqSDXk58tUj2bJBj7W1MqqVI3d1WzlysE1+cCRT7j50UrJb6mXp/sxwbhyZ
UQ+M+RidUT3ldg62MqXq56yuPqV/f0X1h/pD/ajNOjevtvLu0uOHwnk4vD3W
v9ec+EC+mXdOb3tHY6Fen8qorx2LZFTVrzpZMur6V641UrevbZ8pv913U4z3
MmPt3DtPezdo5555etxA2PvzrPqfG7Hb9uvdc2y75sgj3/6f8tnP/oHOqf98
w+flqVX/S04Xm3//AAAAAKaqbz76N/Ln/+2P5LHv/K1kfnCzXmY69yTqgdwi
cfX7JPLjlzM1RXbWszJmfm/ktoC3LZJRfXEZNTCkx/6O9RiVUbu6ysPPu6K8
OXyfATWX1Mq1S3R+PSmu4AWGA72XYp5LrztqW7s6a4KPGZlRVT/q6XPHjO/f
REzlsb5HPloof/GFP5Jr/vH/lIzXbrhiNuWaSYjGNZMAAACu3pu/jp1nZzr3
JGvRwX3y1Q8n9hpDaszvRD+nE03ljKr88OVrE+43JZ8iHt89AwAAkB6mcw8m
j6meUZNhOg/BmUzXJQAAwFRgOvdg8iCjRpjOQnAm03UJAAAwFZjOPZg8yKgR
prMQnMl0XQIAAEwFpnMPJg8yaoTpLARnMl2XAAAAU4Hp3IPJg4waYToLwZlM
1yUAAMBUYDr3YPIgo0aYzkLjZ4E0n82T7vJ8ravgXanYMFPfVvrWNunMWx9z
39aCg1Kx1rr92RXSVbxTSpZHrndcc+KgNL59mwNeExkVAABgMjGdezB5kFEj
TGehcbN8saiv/e0/f1Taz2ZLX4dXJOCWqnWz5OKRAv19v51HHgzfdyjgldoN
s8S1KUMC1m2+qjfC62pv9kpPzoPmXxMZFQAAYFIxnXsweZBRI0xnoXHNqEMe
qbEyqb1sgVgpVbqtXHrhYJ7YP15p2GrdvvwefV+dUV/OEH/w1p6PntSPddd7
9OMKX9kogwMSfmzrzqnbt2q6LgEAAKYC07kHkwcZNcJ0FpqojOpa/5wMW8my
bdftcjG7RIaq3pCGYo+Iv17OL18oA6GMummb+HvzpTozVyfRRivDNtfaGbX8
eIUVTfPl3NMzpPjVpXLumRlmXyMZFQAAwNFM5x5MHmTUCNNZaPwy6j3Sr/o8
/UHWz+DFHVJk3aYy6nDdFut+s6W7RyTgKROfyrPBjBoYcukcWl/UqjNsX4dH
ulQ/akaGDAX7Uf09lVL/i7nmXycZFQAAwLFM5x5MHmTUCNNZaPwyqt2P2vjm
beJas1h6rCzqLd2kb7MzanC+6YonZEhl2IBHLoUyqq80fM2kjmY7k3Zm3Scl
P18hla/eKmrccG+fyHD1FvOvk4wKAADgWIv27zaefTAJ7NtNRo1iOguNd0ZV
faP69+fW6u5U987bdEb11UWuiVS42cqlgah+VK8rcl3fFUvF67My6qEHpe5M
abAT1TLskaYpfK1f03UJAAAwFTx+5Cfm8w8cb8muTWTUKKazEJzJdF0CAABM
BbvOPExfKi5v325Z+6u7ZPeBLxuvV6cwnYXgTKbrEgAAYKpQOfXrB35m5ZE9
5vMQHOX+Pdt0Pt22faYc+/h247XqFKazEJzJdF0CAABMNe/uvUl+8JtvyLfe
WyUP//YFTFPfeO9Z+e4735ZXt39ZZ1Nl34e3GK9PJzGdheBMpusSAABgKtqT
FcklgHLw6Hzjdek0prMQnMl0XQIAAExVH525Qw7lLJD9R27BNHb4xAI55brT
eD060dlnZhjPQ3AWVROm6xIAAADA9HR673xyKsJULaiaMF2XAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAwHR2ujjC9LYAAAAAAKYvlUvzC++UU647Jc/6
f37Rnca3CQAAAAAw/YTyae4nd4j6OXdhnXx05g7j2wUAAAAAmH5URj159ivy
wfEFEvo5XfC08e0CAAAAAEw/KqOqftO9H9ys8+k///M/W/8NGN8uAAAAAMD0
ozKqGue7++CXdUb9zGc+o3Pq/w8PW3p7
    "], {{0, 420}, {937, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{542.7765624999994, Automatic},
  ImageSizeRaw->{937, 420},
  PlotRange->{{0, 937}, {0, 420}}]], "Text",
 CellChangeTimes->{3.765280117331788*^9},
 TextAlignment->Center,ExpressionUUID->"7b10d6e0-f4b5-4450-b445-28e68324fea0"],

Cell[CellGroupData[{

Cell["Sample Data:", "Section",
 CellChangeTimes->{{3.8813976825098953`*^9, 
  3.881397687737214*^9}},ExpressionUUID->"953e1ede-e455-42b7-8024-\
9b451505857f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Othello", " ", "=", " ", 
   RowBox[{
   "Import", "[", 
    "\"\<http://www.gutenberg.org/cache/epub/2267/pg2267.txt\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hamlet", "=", " ", 
   RowBox[{
   "Import", "[", 
    "\"\<http://www.gutenberg.org/cache/epub/2265/pg2265.txt\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Macbeth", " ", "=", " ", 
   RowBox[{
   "Import", "[", 
    "\"\<http://www.gutenberg.org/cache/epub/2264/pg2264.txt\>\"", "]"}]}], 
  ";"}]}], "Input",
 CellLabel->"In[1673]:=",
 CellID->1872958049,ExpressionUUID->"32dcfe49-0f58-4c78-91bf-7e75dc41e6f6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TheImportanceOfBeingEarnest", " ", "=", " ", 
   RowBox[{
   "Import", "[", "\"\<http://www.gutenberg.org/cache/epub/844/pg844.txt\>\"",
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ThePictureofDorianGray", " ", "=", " ", 
   RowBox[{
   "Import", "[", "\"\<http://www.gutenberg.org/cache/epub/174/pg174.txt\>\"",
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AnIdealHusband", " ", "=", " ", 
   RowBox[{
   "Import", "[", "\"\<http://www.gutenberg.org/files/885/885-0.txt\>\"", 
    "]"}]}], ";"}]}], "Input",
 CellLabel->"In[1676]:=",
 CellID->990631817,ExpressionUUID->"6a12161c-7d86-4589-b5d2-e39e48825fc9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"LesMiserables", " ", "=", " ", 
   RowBox[{
   "Import", "[", "\"\<http://www.gutenberg.org/cache/epub/135/pg135.txt\>\"",
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NotreDamedeParis", " ", "=", " ", 
   RowBox[{
   "Import", "[", 
    "\"\<http://www.gutenberg.org/cache/epub/2610/pg2610.txt\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TheManWhoLaughs", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<http://www.gutenberg.org/cache/epub/12587/pg12587.txt\>\"", "]"}]}], 
  ";"}]}], "Input",
 CellLabel->"In[1679]:=",
 CellID->108233128,ExpressionUUID->"60e7f373-3f11-40cf-9a79-d40bf3c5abf3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate an author classifier from these texts:", "Section",
 CellID->1788442412,ExpressionUUID->"b4d596b2-7145-4c13-9bcb-72033594bada"],

Cell["Set up different methods of machine learning:", "Text",
 CellChangeTimes->{{3.881397756082608*^9, 
  3.8813977675309362`*^9}},ExpressionUUID->"de2b5f90-f241-4005-8df2-\
d18fbc139021"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingset", " ", "=", " ", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Shakesphere\>\"", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"Othello", ",", " ", "Hamlet", ",", " ", "Macbeth"}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Widle\>\"", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
       "TheImportanceOfBeingEarnest", ",", " ", "ThePictureofDorianGray", ",",
         " ", "AnIdealHusband"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Hugo\>\"", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
       "LesMiserables", ",", " ", "NotreDamedeParis", ",", " ", 
        "TheManWhoLaughs"}], "}"}]}]}], "\[IndentingNewLine]", "|>"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"methods", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<RandomForest\>\"", ",", " ", "\"\<NearestNeighbors\>\"", ",", " ", 
     "\"\<LogisticRegression\>\"", ",", " ", "\"\<Markov\>\""}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.782677177942404*^9, 3.782677182452178*^9}, 
   3.881397733601811*^9, {3.945690578146268*^9, 3.945690580522332*^9}, {
   3.945699890871895*^9, 3.945700044262478*^9}, {3.945700603917466*^9, 
   3.945700604598054*^9}, 3.9457007850189743`*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->
  "In[1682]:=",ExpressionUUID->"b55b71eb-133c-420c-85ff-7dceffb481aa"],

Cell["\<\
Run the ML using the \[OpenCurlyDoubleQuote]Classify\[CloseCurlyDoubleQuote] \
command and related associations:\
\>", "Text",
 CellChangeTimes->{{3.881397756082608*^9, 
  3.881397796187602*^9}},ExpressionUUID->"ffff6bd5-a4e0-4b92-9e6b-\
bff2f6e56084"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"author1", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"Method", " ", "->", 
     RowBox[{"methods", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"author2", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"Method", " ", "->", 
     RowBox[{"methods", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"author3", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"Method", " ", "->", 
     RowBox[{"methods", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"author4", " ", "=", " ", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"Method", " ", "->", 
     RowBox[{"methods", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.782677130929646*^9, 3.782677153817171*^9}, 
   3.78267718756092*^9, 3.782677228092317*^9, 3.7826773019900913`*^9, {
   3.8807108481107817`*^9, 3.88071085049072*^9}, {3.880710915811247*^9, 
   3.8807109168216887`*^9}, 3.8813978081424294`*^9, {3.945690595629973*^9, 
   3.945690612793249*^9}, {3.94569066158813*^9, 3.9456906621398067`*^9}, {
   3.945690711198524*^9, 3.945690716374496*^9}, {3.9456907472960243`*^9, 
   3.945690758199106*^9}, {3.9456974642595663`*^9, 3.9456974658046103`*^9}, {
   3.945700742512885*^9, 3.9457007782380047`*^9}, {3.945700849049075*^9, 
   3.945700854898054*^9}, {3.9457008913974667`*^9, 3.945700918187636*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"In[1684]:=",
 CellID->155533287,ExpressionUUID->"9793f716-c90a-4d58-aef4-e9b7d9de941f"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"], 
                    ImageSizeCache -> {
                    7.702914374999999, {0., 7.702914374999999}}], Appearance -> 
                   None, BaseStyle -> {}, 
                   ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    GrayLevel[0.45], 
                    PointSize[0.13], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], {
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, Background -> GrayLevel[0.94], 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                  True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                  Ticks -> {None, None}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Text\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Hugo\"", "\"Shakesphere\"", "\"Widle\""},
                     "RowWithSeparators"], "SummaryItem"]}]}}, AutoDelete -> 
                  False, BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
             GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], Appearance -> None, 
                   BaseStyle -> {}, 
                   ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    GrayLevel[0.45], 
                    PointSize[0.13], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], {
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, Background -> GrayLevel[0.94], 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                  True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                  Ticks -> {None, None}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Text\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Hugo\"", "\"Shakesphere\"", "\"Widle\""},
                     "RowWithSeparators"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["9", "SummaryItem"]}]}}, AutoDelete -> False, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[ClassifierFunction, 6946696, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm], 
           ImageSizeCache -> {
            114.88710937499998`, {3.758906250000001, 9.201093749999998}}], 
          BaseStyle -> {"DialogStyle"}, ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", ClassifierFunction, 6946696, 
            10589459619774233144140830180896042694956616661823190183568, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Evaluator -> 
          Automatic]}, "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  BoxID -> 10589459619774233144140830180896042694956616661823190183568,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.9456907011797113`*^9, 3.9456907167350063`*^9}, {
   3.9456907496873913`*^9, 3.945690758995226*^9}, 3.9456974740112743`*^9, {
   3.945700008971694*^9, 3.945700019884893*^9}, 3.945700052262535*^9, {
   3.9457007265638733`*^9, 3.9457007502558603`*^9}, {3.945700780687545*^9, 
   3.945700801316531*^9}, 3.94570092304106*^9, {3.9457009637818813`*^9, 
   3.945700993173018*^9}},
 CellLabel->
  "Out[1684]=",ExpressionUUID->"0f1730a7-a857-4a51-ac39-7129f11de790"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"], 
                    ImageSizeCache -> {
                    7.702914374999999, {0., 7.702914374999999}}], Appearance -> 
                   None, BaseStyle -> {}, 
                   ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    GrayLevel[0.45], 
                    PointSize[0.13], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], {
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, Background -> GrayLevel[0.94], 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                  True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                  Ticks -> {None, None}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Text\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Hugo\"", "\"Shakesphere\"", "\"Widle\""},
                     "RowWithSeparators"], "SummaryItem"]}]}}, AutoDelete -> 
                  False, BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
             GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], Appearance -> None, 
                   BaseStyle -> {}, 
                   ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    GrayLevel[0.45], 
                    PointSize[0.13], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], {
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, Background -> GrayLevel[0.94], 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                  True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                  Ticks -> {None, None}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Text\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Hugo\"", "\"Shakesphere\"", "\"Widle\""},
                     "RowWithSeparators"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["9", "SummaryItem"]}]}}, AutoDelete -> False, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[ClassifierFunction, 6866008, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm], 
           ImageSizeCache -> {
            114.88710937499998`, {3.758906250000001, 9.201093749999998}}], 
          BaseStyle -> {"DialogStyle"}, ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", ClassifierFunction, 6866008, 
            10589459619774233144140830180896042694975063405897979696144, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Evaluator -> 
          Automatic]}, "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  BoxID -> 10589459619774233144140830180896042694975063405897979696144,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.9456907011797113`*^9, 3.9456907167350063`*^9}, {
   3.9456907496873913`*^9, 3.945690758995226*^9}, 3.9456974740112743`*^9, {
   3.945700008971694*^9, 3.945700019884893*^9}, 3.945700052262535*^9, {
   3.9457007265638733`*^9, 3.9457007502558603`*^9}, {3.945700780687545*^9, 
   3.945700801316531*^9}, 3.94570092304106*^9, 3.9457009637818813`*^9, 
   3.945700995263797*^9},
 CellLabel->
  "Out[1685]=",ExpressionUUID->"ce79d83e-f2a9-4520-aa58-3d9170cb2eec"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"], 
                    ImageSizeCache -> {
                    7.702914374999999, {0., 7.702914374999999}}], Appearance -> 
                   None, BaseStyle -> {}, 
                   ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    GrayLevel[0.45], 
                    PointSize[0.13], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], {
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, Background -> GrayLevel[0.94], 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                  True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                  Ticks -> {None, None}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Text\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Hugo\"", "\"Shakesphere\"", "\"Widle\""},
                     "RowWithSeparators"], "SummaryItem"]}]}}, AutoDelete -> 
                  False, BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
             GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], Appearance -> None, 
                   BaseStyle -> {}, 
                   ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    GrayLevel[0.45], 
                    PointSize[0.13], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], {
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, Background -> GrayLevel[0.94], 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                  True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                  Ticks -> {None, None}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Text\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Hugo\"", "\"Shakesphere\"", "\"Widle\""},
                     "RowWithSeparators"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["9", "SummaryItem"]}]}}, AutoDelete -> False, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[ClassifierFunction, 6974336, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm], 
           ImageSizeCache -> {
            114.88710937499998`, {3.758906250000001, 9.201093749999998}}], 
          BaseStyle -> {"DialogStyle"}, ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", ClassifierFunction, 6974336, 
            10589459619774233144140830180896042694993510149971689306272, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Evaluator -> 
          Automatic]}, "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  BoxID -> 10589459619774233144140830180896042694993510149971689306272,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.9456907011797113`*^9, 3.9456907167350063`*^9}, {
   3.9456907496873913`*^9, 3.945690758995226*^9}, 3.9456974740112743`*^9, {
   3.945700008971694*^9, 3.945700019884893*^9}, 3.945700052262535*^9, {
   3.9457007265638733`*^9, 3.9457007502558603`*^9}, {3.945700780687545*^9, 
   3.945700801316531*^9}, 3.94570092304106*^9, 3.9457009637818813`*^9, 
   3.945700997832693*^9},
 CellLabel->
  "Out[1686]=",ExpressionUUID->"882d4949-2b10-4e74-a8d5-3aaa335fbff6"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"], 
                    ImageSizeCache -> {
                    7.702914374999999, {0., 7.702914374999999}}], Appearance -> 
                   None, BaseStyle -> {}, 
                   ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    GrayLevel[0.45], 
                    PointSize[0.13], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], {
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, Background -> GrayLevel[0.94], 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                  True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                  Ticks -> {None, None}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Text\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Hugo\"", "\"Shakesphere\"", "\"Widle\""},
                     "RowWithSeparators"], "SummaryItem"]}]}}, AutoDelete -> 
                  False, BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
             GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], Appearance -> None, 
                   BaseStyle -> {}, 
                   ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    GrayLevel[0.45], 
                    PointSize[0.13], 
                    
                    PointBox[{{0.9821769431797024, -0.440194219686987}, {
                    1.1339776261519132`, 0.8056918676854272}, {
                    0.5279892326667741, 0.6574306661126254}, {
                    0.022147046479890797`, 1.4937877187998898`}}], {
                    GrayLevel[0.7], 
                    
                    PointBox[{{-0.9815166384819979, 
                    0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    LineBox[{{-1., 1.5}, {1, -1.6}}]}}, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, Background -> GrayLevel[0.94], 
                  BaseStyle -> {FontFamily -> "Arial", 
                    AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                  True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                  Ticks -> {None, None}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Text\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Hugo\"", "\"Shakesphere\"", "\"Widle\""},
                     "RowWithSeparators"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Markov\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["9", "SummaryItem"]}]}}, AutoDelete -> False, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               AutoDelete -> False, BaselinePosition -> {1, 1}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[ClassifierFunction, 3414024, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm], 
           ImageSizeCache -> {
            114.88710937499998`, {3.758906250000001, 9.201093749999998}}], 
          BaseStyle -> {"DialogStyle"}, ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", ClassifierFunction, 3414024, 
            10589459619774233144140830180896042695011956894045395968448, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Evaluator -> 
          Automatic]}, "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  BoxID -> 10589459619774233144140830180896042695011956894045395968448,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.9456907011797113`*^9, 3.9456907167350063`*^9}, {
   3.9456907496873913`*^9, 3.945690758995226*^9}, 3.9456974740112743`*^9, {
   3.945700008971694*^9, 3.945700019884893*^9}, 3.945700052262535*^9, {
   3.9457007265638733`*^9, 3.9457007502558603`*^9}, {3.945700780687545*^9, 
   3.945700801316531*^9}, 3.94570092304106*^9, 3.9457009637818813`*^9, 
   3.945701002375174*^9},
 CellLabel->
  "Out[1687]=",ExpressionUUID->"e99abe1e-7e3e-42ce-aefa-9577b7ca6bd5"]
}, Open  ]],

Cell["\<\
Get information about your model, accuracy, evaluation time, etc.\
\>", "Text",
 CellChangeTimes->{{3.881397756082608*^9, 3.8813977675309362`*^9}, {
  3.881397830671432*^9, 
  3.881397846924666*^9}},ExpressionUUID->"8e942bf4-140c-4bde-8bfb-\
764c92618dc3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Information", "[", "author1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Information", "[", "author2", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Information", "[", "author3", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Information", "[", "author4", "]"}]}], "Input",
 CellChangeTimes->{{3.7826772633590803`*^9, 3.782677268094434*^9}, {
   3.881397849487144*^9, 3.8813978500339193`*^9}, 3.94569061135336*^9, {
   3.945690663704041*^9, 3.945690664278696*^9}, {3.945700903378477*^9, 
   3.945700908140958*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->
  "In[1688]:=",ExpressionUUID->"56bc79d9-3a95-441f-a519-2a261d48d012"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12],
         FrameMargins->{{10, 5}, {-4, 2}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.96, 0.96, 0.96],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Data type"], 
                  TextCell["Data type"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              InterpretationBox[Cell[
               "Text",ExpressionUUID->"dbeae203-a854-4ddd-9fd9-4a908ce9b534"],
               
               TextCell["Text"]]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Classes"], 
                  TextCell["Classes"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{",", "\",\"", 
                InterpretationBox[
                 Cell["Hugo"], 
                 TextCell["Hugo"]], 
                InterpretationBox[
                 Cell["Shakesphere"], 
                 TextCell["Shakesphere"]], 
                InterpretationBox[
                 Cell["Widle"], 
                 TextCell["Widle"]]},
               "RowWithSeparators"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Method"], 
                  TextCell["Method"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                
                InterpretationBox[Cell[
                 "RandomForest",ExpressionUUID->
                  "cd0e8870-f187-4867-8056-4dd0c9ceea11"],
                 TextCell["RandomForest"]],
                StyleBox[
                 TagBox[
                  GridBox[{{"\"FeatureFraction\"", 
                    FractionBox["1", "3"]}, {"\"LeafSize\"", "2"}, {
                    "\"TreeNumber\"", "50"}, {
                    "\"DistributionSmoothing\"", "0.5`"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxBackground -> {"Columns" -> {{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, "Rows" -> {{None}}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{1}}}, 
                   FrameStyle -> GrayLevel[0.84]], "Grid"], FontFamily -> 
                 "Verdana", StripOnInput -> False]],
               Annotation[#, 
                Style[
                 Grid[{{"FeatureFraction", 
                    Rational[1, 3]}, {"LeafSize", 2}, {"TreeNumber", 50}, {
                   "DistributionSmoothing", 0.5}}, Alignment -> Left, Frame -> 
                  All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                  Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"], 
                "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Single evaluation time"], 
                  TextCell["Single evaluation time"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"256.`", 
                
                RowBox[{
                 "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                  "\"example\""}], "milliseconds per example", 
                FractionBox["\"Milliseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Batch evaluation speed"], 
                  TextCell["Batch evaluation speed"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"3.87`", 
                
                RowBox[{
                 "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"s\""}], "examples per second", 
                FractionBox["\"Examples\"", "\"Seconds\""]},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Model memory"], 
                  TextCell["Model memory"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"6.94`", "\"MB\"", "megabytes", "\"Megabytes\""},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Training examples used"], 
                  TextCell["Training examples used"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"9", "\"examples\"", "examples", "\"Examples\""},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Training time"], 
                  TextCell["Training time"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"2.07`", "\"s\"", "seconds", "\"Seconds\""},
               "Quantity"]}
            },
            AutoDelete->False,
            ColumnsEqual->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 11, FontFamily -> 
          ".AppleSystemUIFont", NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[0.8], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Background->GrayLevel[1],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{
  3.945690701313594*^9, 3.9456974740133553`*^9, 3.94570005403802*^9, 
   3.945700728315784*^9, 3.945700822257107*^9, 3.945700933735235*^9, {
   3.945700974323586*^9, 3.945701003943145*^9}},
 CellLabel->
  "Out[1688]=",ExpressionUUID->"9aa3e56d-4e93-4579-b72f-8a8deafd1af0"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12],
         FrameMargins->{{10, 5}, {-4, 2}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.96, 0.96, 0.96],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Data type"], 
                  TextCell["Data type"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              InterpretationBox[Cell[
               "Text",ExpressionUUID->"8b098414-8260-4b67-a39b-bb58d6cef2f1"],
               
               TextCell["Text"]]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Classes"], 
                  TextCell["Classes"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{",", "\",\"", 
                InterpretationBox[
                 Cell["Hugo"], 
                 TextCell["Hugo"]], 
                InterpretationBox[
                 Cell["Shakesphere"], 
                 TextCell["Shakesphere"]], 
                InterpretationBox[
                 Cell["Widle"], 
                 TextCell["Widle"]]},
               "RowWithSeparators"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Method"], 
                  TextCell["Method"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                
                InterpretationBox[Cell[
                 "NearestNeighbors",ExpressionUUID->
                  "65cb29df-6b0b-4f3b-a41f-48b84deef08f"],
                 TextCell["NearestNeighbors"]],
                StyleBox[
                 TagBox[
                  
                  GridBox[{{"\"NeighborsNumber\"", "1"}, {
                    "\"DistributionSmoothing\"", "0.5`"}, {
                    "\"NearestMethod\"", "\"KDtree\""}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxBackground -> {"Columns" -> {{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, "Rows" -> {{None}}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{1}}}, 
                   FrameStyle -> GrayLevel[0.84]], "Grid"], FontFamily -> 
                 "Verdana", StripOnInput -> False]],
               Annotation[#, 
                Style[
                 
                 Grid[{{"NeighborsNumber", 1}, {
                   "DistributionSmoothing", 0.5}, {
                   "NearestMethod", "KDtree"}}, Alignment -> Left, Frame -> 
                  All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                  Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"], 
                "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Single evaluation time"], 
                  TextCell["Single evaluation time"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"264.`", 
                RowBox[{
                 "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                  "\"example\""}], "milliseconds per example", 
                FractionBox["\"Milliseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Batch evaluation speed"], 
                  TextCell["Batch evaluation speed"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"3.89`", 
                
                RowBox[{
                 "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"s\""}], "examples per second", 
                FractionBox["\"Examples\"", "\"Seconds\""]},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Model memory"], 
                  TextCell["Model memory"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"6.86`", "\"MB\"", "megabytes", "\"Megabytes\""},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Training examples used"], 
                  TextCell["Training examples used"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"9", "\"examples\"", "examples", "\"Examples\""},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Training time"], 
                  TextCell["Training time"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"2.08`", "\"s\"", "seconds", "\"Seconds\""},
               "Quantity"]}
            },
            AutoDelete->False,
            ColumnsEqual->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 11, FontFamily -> 
          ".AppleSystemUIFont", NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[0.8], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Background->GrayLevel[1],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{3.945690701313594*^9, 3.9456974740133553`*^9, 
  3.94570005403802*^9, 3.945700728315784*^9, 3.945700822257107*^9, 
  3.945700933735235*^9, 3.945700974323586*^9, 3.945701005495998*^9},
 CellLabel->
  "Out[1689]=",ExpressionUUID->"ee21a64c-e9ba-4b87-ab07-d0f7668ae314"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12],
         FrameMargins->{{10, 5}, {-4, 2}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.96, 0.96, 0.96],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Data type"], 
                  TextCell["Data type"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              InterpretationBox[Cell[
               "Text",ExpressionUUID->"7b747569-260e-433a-9e6e-a65e3410cad2"],
               
               TextCell["Text"]]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Classes"], 
                  TextCell["Classes"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{",", "\",\"", 
                InterpretationBox[
                 Cell["Hugo"], 
                 TextCell["Hugo"]], 
                InterpretationBox[
                 Cell["Shakesphere"], 
                 TextCell["Shakesphere"]], 
                InterpretationBox[
                 Cell["Widle"], 
                 TextCell["Widle"]]},
               "RowWithSeparators"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Accuracy"], 
                  TextCell["Accuracy"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{
                RowBox[{"(", 
                  InterpretationBox[
                   
                   TemplateBox[{"71.", "14."}, "Around", SyntaxForm -> 
                    PlusMinus], 
                   Around[
                   71.1111111111111142691`3., 13.7939774910336439007`3.]], 
                  ")"}], "\"%\"", "percent", "\"Percent\""},
               "QuantityPostfix"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Method"], 
                  TextCell["Method"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                
                InterpretationBox[Cell[
                 "LogisticRegression",ExpressionUUID->
                  "dbc0dbe8-c50d-4cc1-9000-4ffceb413cd0"],
                 TextCell["LogisticRegression"]],
                StyleBox[
                 TagBox[
                  
                  GridBox[{{"\"L1Regularization\"", "0"}, {
                    "\"L2Regularization\"", "0.01`"}, {
                    "\"OptimizationMethod\"", "\"LBFGS\""}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxBackground -> {"Columns" -> {{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, "Rows" -> {{None}}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{1}}}, 
                   FrameStyle -> GrayLevel[0.84]], "Grid"], FontFamily -> 
                 "Verdana", StripOnInput -> False]],
               Annotation[#, 
                Style[
                 
                 Grid[{{"L1Regularization", 0}, {"L2Regularization", 0.01}, {
                   "OptimizationMethod", "LBFGS"}}, Alignment -> Left, Frame -> 
                  All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                  Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"], 
                "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Single evaluation time"], 
                  TextCell["Single evaluation time"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"257.`", 
                
                RowBox[{
                 "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                  "\"example\""}], "milliseconds per example", 
                FractionBox["\"Milliseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Batch evaluation speed"], 
                  TextCell["Batch evaluation speed"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"3.83`", 
                
                RowBox[{
                 "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"s\""}], "examples per second", 
                FractionBox["\"Examples\"", "\"Seconds\""]},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["Loss"], 
                    TextCell["Loss"]], "\"Mean cross entropy\"", TooltipStyle -> 
                   "TextStyling"], 
                  Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.8000546489518305382`3.", 
                  StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.4632138320722417602`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                TemplateBox[{"\"95% confidence interval: [\"", 
                  RowBox[{"-", "0.1263730151926529821`3."}], "\", \"", 
                  "1.7264823130963140585`3.", "\"]\""}, "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", -0.1263730151926529821`3., 
                  ", ", 1.7264823130963140585`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Model memory"], 
                  TextCell["Model memory"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"6.97`", "\"MB\"", "megabytes", "\"Megabytes\""},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Training examples used"], 
                  TextCell["Training examples used"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"9", "\"examples\"", "examples", "\"Examples\""},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Training time"], 
                  TextCell["Training time"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"2.56`", "\"s\"", "seconds", "\"Seconds\""},
               "Quantity"]}
            },
            AutoDelete->False,
            ColumnsEqual->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 11, FontFamily -> 
          ".AppleSystemUIFont", NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[0.8], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Background->GrayLevel[1],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{3.945690701313594*^9, 3.9456974740133553`*^9, 
  3.94570005403802*^9, 3.945700728315784*^9, 3.945700822257107*^9, 
  3.945700933735235*^9, 3.945700974323586*^9, 3.945701007068178*^9},
 CellLabel->
  "Out[1690]=",ExpressionUUID->"249b197c-3c88-438f-aa63-6b115df28455"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12],
         FrameMargins->{{10, 5}, {-4, 2}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.96, 0.96, 0.96],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Data type"], 
                  TextCell["Data type"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              InterpretationBox[Cell[
               "Text",ExpressionUUID->"5bbf5e46-81b9-40aa-9722-5a1ef164c122"],
               
               TextCell["Text"]]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Classes"], 
                  TextCell["Classes"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{",", "\",\"", 
                InterpretationBox[
                 Cell["Hugo"], 
                 TextCell["Hugo"]], 
                InterpretationBox[
                 Cell["Shakesphere"], 
                 TextCell["Shakesphere"]], 
                InterpretationBox[
                 Cell["Widle"], 
                 TextCell["Widle"]]},
               "RowWithSeparators"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Method"], 
                  TextCell["Method"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                
                InterpretationBox[Cell[
                 "Markov",ExpressionUUID->
                  "6bd453d5-ce90-4d0c-94f9-b0857a433b08"],
                 TextCell["Markov"]],
                StyleBox[
                 TagBox[
                  
                  GridBox[{{"\"Order\"", "0"}, {
                    "\"AdditiveSmoothing\"", "0.1`"}, {
                    "\"MinimumTokenCount\"", "1"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxBackground -> {"Columns" -> {{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, "Rows" -> {{None}}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{1}}}, 
                   FrameStyle -> GrayLevel[0.84]], "Grid"], FontFamily -> 
                 "Verdana", StripOnInput -> False]],
               Annotation[#, 
                Style[
                 
                 Grid[{{"Order", 0}, {"AdditiveSmoothing", 0.1}, {
                   "MinimumTokenCount", 1}}, Alignment -> Left, Frame -> All, 
                  FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                  Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"], 
                "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Single evaluation time"], 
                  TextCell["Single evaluation time"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"1.17`", 
                
                RowBox[{
                 "\"s\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                  "\"example\""}], "seconds per example", 
                FractionBox["\"Seconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Batch evaluation speed"], 
                  TextCell["Batch evaluation speed"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"0.861`", 
                
                RowBox[{
                 "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"s\""}], "examples per second", 
                FractionBox["\"Examples\"", "\"Seconds\""]},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Model memory"], 
                  TextCell["Model memory"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"3.41`", "\"MB\"", "megabytes", "\"Megabytes\""},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Training examples used"], 
                  TextCell["Training examples used"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"9", "\"examples\"", "examples", "\"Examples\""},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Training time"], 
                  TextCell["Training time"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"4.53`", "\"s\"", "seconds", "\"Seconds\""},
               "Quantity"]}
            },
            AutoDelete->False,
            ColumnsEqual->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 11, FontFamily -> 
          ".AppleSystemUIFont", NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[0.8], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Background->GrayLevel[1],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{3.945690701313594*^9, 3.9456974740133553`*^9, 
  3.94570005403802*^9, 3.945700728315784*^9, 3.945700822257107*^9, 
  3.945700933735235*^9, 3.945700974323586*^9, 3.94570101056152*^9},
 CellLabel->
  "Out[1691]=",ExpressionUUID->"3904919b-b331-4cd1-be00-dc3131e1b060"]
}, Open  ]],

Cell["Test your model:", "Text",
 CellChangeTimes->{{3.881397756082608*^9, 3.8813977675309362`*^9}, {
  3.8813978659391603`*^9, 
  3.8813978690990543`*^9}},ExpressionUUID->"7c0891ee-c0bc-490f-afa3-\
c33afc926e46"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{"{", 
    RowBox[{"Hamlet", ",", " ", "Macbeth", ",", " ", "LesMiserables"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"author1", "[", "test", "]"}], "\[IndentingNewLine]", 
 RowBox[{"author2", "[", "test", "]"}], "\[IndentingNewLine]", 
 RowBox[{"author3", "[", "test", "]"}], "\[IndentingNewLine]", 
 RowBox[{"author4", "[", "test", "]"}]}], "Input",
 CellChangeTimes->{
  3.8813978864139442`*^9, {3.945690629925331*^9, 3.9456906308203363`*^9}, {
   3.9456906654578257`*^9, 3.945690666866734*^9}, {3.94569081685769*^9, 
   3.9456908171952953`*^9}, {3.945700061578806*^9, 3.945700081001987*^9}, {
   3.945700121475594*^9, 3.945700128083466*^9}, {3.9457008710943937`*^9, 
   3.945700878859378*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"In[1692]:=",
 CellID->1191029375,ExpressionUUID->"d49de3b4-9d9c-47f9-9db1-94b66e1b47b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Shakesphere\"\>", ",", "\<\"Shakesphere\"\>", 
   ",", "\<\"Shakesphere\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.945690701318531*^9, 3.9456908205402527`*^9, 3.945697474018876*^9, {
   3.945700054092784*^9, 3.945700081781621*^9}, 3.945700129368659*^9, 
   3.94570072906085*^9, 3.945700825433011*^9, {3.945700981660893*^9, 
   3.9457010113485193`*^9}},
 CellLabel->
  "Out[1693]=",ExpressionUUID->"4b255407-885a-45f9-815c-71689c3e42f6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Shakesphere\"\>", ",", "\<\"Shakesphere\"\>", 
   ",", "\<\"Hugo\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.945690701318531*^9, 3.9456908205402527`*^9, 3.945697474018876*^9, {
   3.945700054092784*^9, 3.945700081781621*^9}, 3.945700129368659*^9, 
   3.94570072906085*^9, 3.945700825433011*^9, 3.945700981660893*^9, 
   3.945701012098798*^9},
 CellLabel->
  "Out[1694]=",ExpressionUUID->"8a2afa31-ea7f-4b0a-a5ae-3cb6470fcf27"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Shakesphere\"\>", ",", "\<\"Shakesphere\"\>", 
   ",", "\<\"Hugo\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.945690701318531*^9, 3.9456908205402527`*^9, 3.945697474018876*^9, {
   3.945700054092784*^9, 3.945700081781621*^9}, 3.945700129368659*^9, 
   3.94570072906085*^9, 3.945700825433011*^9, 3.945700981660893*^9, 
   3.9457010128504677`*^9},
 CellLabel->
  "Out[1695]=",ExpressionUUID->"b689a560-a655-43a9-94e6-72679c8f6f4f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Shakesphere\"\>", ",", "\<\"Shakesphere\"\>", 
   ",", "\<\"Hugo\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.945690701318531*^9, 3.9456908205402527`*^9, 3.945697474018876*^9, {
   3.945700054092784*^9, 3.945700081781621*^9}, 3.945700129368659*^9, 
   3.94570072906085*^9, 3.945700825433011*^9, 3.945700981660893*^9, 
   3.945701016039318*^9},
 CellLabel->
  "Out[1696]=",ExpressionUUID->"e2e33754-df19-4dc2-8564-4562bf4560a4"]
}, Open  ]],

Cell["Find some other literature:", "Text",
 CellChangeTimes->{{3.881397756082608*^9, 3.8813977675309362`*^9}, {
  3.881397896784528*^9, 
  3.881397909508051*^9}},ExpressionUUID->"6061fd33-f594-49ee-b632-\
14cdd24b803f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"anotherHugo", " ", "=", " ", 
   RowBox[{
   "Import", "[", "\"\<http://www.gutenberg.org/files/2523/2523-0.txt\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"joyce", " ", "=", " ", 
   RowBox[{
   "Import", "[", "\"\<http://www.gutenberg.org/files/4300/4300-0.txt\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"irving", " ", "=", " ", 
   RowBox[{
   "Import", "[", "\"\<http://www.gutenberg.org/files/41/41-0.txt\>\"", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.782676816638505*^9, 3.782676830617138*^9}, {
  3.7826769517855377`*^9, 3.782676974806748*^9}},
 CellLabel->
  "In[1697]:=",ExpressionUUID->"0a165bcf-2e39-498c-abe2-e984c5158116"],

Cell["Test your model for the new data:", "Text",
 CellChangeTimes->{{3.881397756082608*^9, 3.8813977675309362`*^9}, {
  3.881397929420292*^9, 
  3.881397935620512*^9}},ExpressionUUID->"53c7f145-f214-4697-9290-\
07101e16cfcd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"books", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"anotherHugo", ",", "joyce", ",", "irving"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"{", 
    RowBox[{"Hugo", ",", "Joyce", ",", " ", "Irving"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"actual", "[", 
        RowBox[{"[", "image", "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"author3", "[", 
        RowBox[{"books", "[", 
         RowBox[{"[", "image", "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"image", ",", " ", "1", ",", " ", 
       RowBox[{"Length", "[", "books", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{"results", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Actual\>\"", ",", "  ", "\"\<Looks most like: \>\""}], 
      "}"}]}], "]"}], ",", " ", 
   RowBox[{"Frame", " ", "\[Rule]", " ", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.782676835835606*^9, 3.78267684568251*^9}, {
   3.7826769778767033`*^9, 3.782676980610107*^9}, {3.7826770462466393`*^9, 
   3.7826770497613153`*^9}, 3.881397963021538*^9, {3.945690654880018*^9, 
   3.945690659332963*^9}, {3.945690809287559*^9, 3.9456908105720797`*^9}, {
   3.945700133060371*^9, 3.94570029565856*^9}, {3.9457003600737743`*^9, 
   3.9457004933596077`*^9}, {3.945700617583638*^9, 3.9457006179982967`*^9}, {
   3.9457006900070667`*^9, 3.945700692109005*^9}, 3.945700882337564*^9, {
   3.945700957441975*^9, 3.945700986234825*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->
  "In[1700]:=",ExpressionUUID->"4f0e76bf-d9ea-4144-b021-4fd1d6c93bb9"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Actual\"\>", "\<\"Looks most like: \"\>"},
    {"Hugo", "\<\"Hugo\"\>"},
    {"Joyce", "\<\"Hugo\"\>"},
    {"Irving", "\<\"Hugo\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.945690701782699*^9, 3.945690811489687*^9, 3.945697474264193*^9, 
   3.9457000544697638`*^9, {3.945700151189436*^9, 3.945700194180187*^9}, {
   3.945700439504388*^9, 3.9457005229133997`*^9}, 3.9457007300144157`*^9, 
   3.945700827738945*^9, {3.9457009587363653`*^9, 3.9457010169742537`*^9}},
 CellLabel->
  "Out[1703]=",ExpressionUUID->"d496def9-6fd6-4c81-ac0b-4e7cf1e90061"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"Printout",
WindowSize->{Full, Full},
WindowMargins->{{0, Automatic}, {5, Automatic}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
Magnification->1.5,
FrontEndVersion->"14.1 for Mac OS X ARM (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"84ebb8ea-a142-4a48-905a-2d0fb7fce9de"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 235, 4, 144, "Title",ExpressionUUID->"0e0d3dd4-a7e0-44f7-bca1-ba866db27c0f"],
Cell[818, 28, 1670, 30, 444, "Text",ExpressionUUID->"36d52b2b-5342-40d9-82dd-918717457859"],
Cell[2491, 60, 58550, 964, 387, "Text",ExpressionUUID->"7b10d6e0-f4b5-4450-b445-28e68324fea0"],
Cell[CellGroupData[{
Cell[61066, 1028, 159, 3, 99, "Section",ExpressionUUID->"953e1ede-e455-42b7-8024-9b451505857f"],
Cell[61228, 1033, 661, 20, 105, "Input",ExpressionUUID->"32dcfe49-0f58-4c78-91bf-7e75dc41e6f6",
 CellID->1872958049],
Cell[61892, 1055, 688, 17, 105, "Input",ExpressionUUID->"6a12161c-7d86-4589-b5d2-e39e48825fc9",
 CellID->990631817],
Cell[62583, 1074, 676, 19, 105, "Input",ExpressionUUID->"60e7f373-3f11-40cf-9a79-d40bf3c5abf3",
 CellID->108233128]
}, Open  ]],
Cell[CellGroupData[{
Cell[63296, 1098, 142, 1, 99, "Section",ExpressionUUID->"b4d596b2-7145-4c13-9bcb-72033594bada",
 CellID->1788442412],
Cell[63441, 1101, 189, 3, 50, "Text",ExpressionUUID->"de2b5f90-f241-4005-8df2-d18fbc139021"],
Cell[63633, 1106, 1426, 33, 221, "Input",ExpressionUUID->"b55b71eb-133c-420c-85ff-7dceffb481aa"],
Cell[65062, 1141, 262, 6, 50, "Text",ExpressionUUID->"ffff6bd5-a4e0-4b92-9e6b-bff2f6e56084"],
Cell[CellGroupData[{
Cell[65349, 1151, 1763, 36, 159, "Input",ExpressionUUID->"9793f716-c90a-4d58-aef4-e9b7d9de941f",
 CellID->155533287],
Cell[67115, 1189, 10978, 217, 139, "Output",ExpressionUUID->"0f1730a7-a857-4a51-ac39-7129f11de790"],
Cell[78096, 1408, 10980, 217, 139, "Output",ExpressionUUID->"ce79d83e-f2a9-4520-aa58-3d9170cb2eec"],
Cell[89079, 1627, 10982, 217, 139, "Output",ExpressionUUID->"882d4949-2b10-4e74-a8d5-3aaa335fbff6"],
Cell[100064, 1846, 10970, 217, 139, "Output",ExpressionUUID->"e99abe1e-7e3e-42ce-aefa-9577b7ca6bd5"]
}, Open  ]],
Cell[111049, 2066, 266, 6, 50, "Text",ExpressionUUID->"8e942bf4-140c-4bde-8bfb-764c92618dc3"],
Cell[CellGroupData[{
Cell[111340, 2076, 648, 11, 176, "Input",ExpressionUUID->"56bc79d9-3a95-441f-a519-2a261d48d012"],
Cell[111991, 2089, 8785, 225, 359, "Output",ExpressionUUID->"9aa3e56d-4e93-4579-b72f-8a8deafd1af0"],
Cell[120779, 2316, 8733, 224, 359, "Output",ExpressionUUID->"ee21a64c-e9ba-4b87-ab07-d0f7668ae314"],
Cell[129515, 2542, 10829, 274, 428, "Output",ExpressionUUID->"249b197c-3c88-438f-aa63-6b115df28455"],
Cell[140347, 2818, 8663, 224, 370, "Output",ExpressionUUID->"3904919b-b331-4cd1-be00-dc3131e1b060"]
}, Open  ]],
Cell[149025, 3045, 213, 4, 50, "Text",ExpressionUUID->"7c0891ee-c0bc-490f-afa3-c33afc926e46"],
Cell[CellGroupData[{
Cell[149263, 3053, 911, 18, 190, "Input",ExpressionUUID->"d49de3b4-9d9c-47f9-9db1-94b66e1b47b8",
 CellID->1191029375],
Cell[150177, 3073, 487, 10, 70, "Output",ExpressionUUID->"4b255407-885a-45f9-815c-71689c3e42f6"],
Cell[150667, 3085, 476, 10, 70, "Output",ExpressionUUID->"8a2afa31-ea7f-4b0a-a5ae-3cb6470fcf27"],
Cell[151146, 3097, 478, 10, 70, "Output",ExpressionUUID->"b689a560-a655-43a9-94e6-72679c8f6f4f"],
Cell[151627, 3109, 476, 10, 70, "Output",ExpressionUUID->"e2e33754-df19-4dc2-8564-4562bf4560a4"]
}, Open  ]],
Cell[152118, 3122, 220, 4, 50, "Text",ExpressionUUID->"6061fd33-f594-49ee-b632-14cdd24b803f"],
Cell[152341, 3128, 739, 19, 105, "Input",ExpressionUUID->"0a165bcf-2e39-498c-abe2-e984c5158116"],
Cell[153083, 3149, 226, 4, 50, "Text",ExpressionUUID->"53c7f145-f214-4697-9290-07101e16cfcd"],
Cell[CellGroupData[{
Cell[153334, 3157, 1931, 45, 330, "Input",ExpressionUUID->"4f0e76bf-d9ea-4144-b021-4fd1d6c93bb9"],
Cell[155268, 3204, 763, 17, 164, "Output",ExpressionUUID->"d496def9-6fd6-4c81-ac0b-4e7cf1e90061"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

